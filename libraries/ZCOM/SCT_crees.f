C======================================================================
C    ASYMPTOTIC PROGRAM FROM MARTIN CREES, 1980
C======================================================================
C    Parameters:
C
C    MCHN - max.number of channels
C    MLMX - max. multipole
C    MXMFG - not less then 54
C-----------------------------------------------------------------------
      SUBROUTINE ASYMPT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5,MXMFG=540)
C
C     (SEE CPC SECTION 5.1)
C
C   ASYMPT ORGANISES THE CALCULATION OF THE SOLUTIONS AT R1 AND R2.
C   THESE SOLUTIONS ARE RETURNED IN ARRAYS F1 AND F2 IN COMMON /SAVE/.
C
C   THE METHOD OF CALCULATION IS
C
C   1)  TO CALL ASYSM TO CALCULATE SOLUTIONS AT RB (ASYSM IS A
C       MODIFIED VERSION OF THE PROGRAM ASYM OF NORCROSS, COMPUT.
C       PHYS. COMMUN. (1969), VOL. 1, 88)
C       WITH THE INTRODUCTION OF THE AUTOMATIC MFG FEATURE, THIS
C       MAY MEAN A REDEFINITION OF MFG, RB AND RA AND ALSO A
C       SECOND CALL TO ASYSM. SEE COMMENTS IN MAIN.
C   2)  CALL SOLV TO INTEGRATE INWARDS (USING 4TH ORDER RUNGE-KUTTA)
C       TO OBTAIN SOLUTIONS AT RA
C   3)  FOR MFG.GT.0 CALL FG TO OBTAIN SOLUTIONS AT (R1,R2) FROM THE
C       SOLUTIONS AT (RA,RB) USING FOX-GOODWIN INTEGRATION
C   4)  RENORMALISE SOLUTIONS AT R1 AND R2
C
C   FOR THE DEFINITION OF RA, RB,R1 AND R2 SEE CPC EQS. (5.1) AND (5.2)
C

      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-MXMFG*MCHF*MCHF)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/FX(2,MCHF,MCHF),FX1(2,MCHF,MCHF),
     A       DUM1(MXMFG,MCHF,MCHF),DUM2(MXDUM2)
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MCHF,MCHF,MLMX),
     A       F1(2,MCHF,MCHF),F2(2,MCHF,MCHF),BB,CC,ECON,EROR,SQK,DELNU,
     B       DEL1,SZ,R1,R2,R0,RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,
     C       ISOLN,KMETH,IPUNCH,NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,
     D       JFILE,KFILE,MFGP1,IALT,JALT,KALT
      COMMON /AUTO/RFST(MCHF),IAUTO
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
C
      DIMENSION WF(MCHF),WF1(MCHF)
      DIMENSION BLAMP(MXBLAM)
C
      EQUIVALENCE (BLAM(1,1,1),BLAMP(1))
C
C   SETUP ARRAYS FOR FAST ADDRESSING (SEE APPENDIX C OF PAPER III)
C   ==============================================================
C   CALCULATE ARRAYS KNZ AND IJNZ
C
      NCHD1 = MCHF - NCHF
      L = 0
      DO 30 K = 1,LAMMX
        IJ = 0
        DO 20 J = 1,NCHF
          DO 10 I = J,NCHF
            IJ = IJ + 1
            IF (BLAM(I,J,K).EQ.0.0D0) GOTO 10
            L = L + 1
            IJNZ(L) = IJ
   10     CONTINUE
          IJ = IJ + NCHD1 + J
   20   CONTINUE
        KNZ(K) = L
   30 CONTINUE
C
C   SETUP NCHOP,DEL3,DEL4
C   =====================
C
      NCHOP = NCHF
      DEL4 = -.0025D0*SZ*SZ
      DEL3 = 0.0D0
C
C   INITIALISE ARRAYS F1 AND F2
C   ===========================
C
      DO 60 K = 1,2
        DO 50 I = 1,NCHF
          DO 40 J = 1,NCHF
            F1(K,I,J) = 0.0D0
            F2(K,I,J) = 0.0D0
   40     CONTINUE
   50   CONTINUE
   60 CONTINUE
C
C   CALCULATE NUMBERS OF OPEN AND CLOSED CHANNELS AND ANY INCREMENT
C   IN THE CHANNEL ENERGIES REQUIRED (SEE CPC SECTION 2.2)
C   ======================================================
C


      DO 80 I = 1,NCHF
        E1 = ET(I)
        IF (E1.GE.0.0D0) GOTO 80
        IF (E1.GE.DEL4) GOTO 70
        NCHOP = NCHOP - 1
        GOTO 80
C
   70   CONTINUE
        IF (E1.GE.DEL3) GOTO 80
        DEL3 = E1
        J = I
   80 CONTINUE
      NCHCL = NCHF - NCHOP
C
C   CHECK DEL1 (SEE CPC SECTION 2.6(II))
C   ====================================
C
      IF (NCHOP.NE.0) GOTO 120
      IF (METH.EQ.1) GOTO 120
      IF (DEL1.GT.0.0D0) GOTO 90
      WRITE (MT6,3200) DEL1
      STOP
C
   90 CONTINUE
      A1 = -ET(1)
      IF (JALT.EQ.1) GOTO 100
      IF (KALT.EQ.0) GOTO 110
C
C   LINEAR INTERPOLATIONS IN ENERGY TO BE MADE
C
  100 CONTINUE
      C1 = A1*0.01D0
      IF (SZ.GT.0.0D0) C1 = C1*2.0D0*SQRT(A1)/SZ
      C2 = C1*0.1D0
      IF (DEL1.GT.C1 .OR. DEL1.LT.C2) WRITE (MT6,3210) C1,C2,DEL1
C
C   SOLUTIONS TO BE CALCULATED AT INCREMENTED ENERGY, BUT NO LINEAR
C   INTERPOLATIONS TO BE MADE
C
  110 CONTINUE
      IF (DEL1.LT.A1) GOTO 120
      WRITE (MT6,3220)
      STOP
C
C   CHECK THAT NO CHANNEL ENERGY = 0.0 FOR Z = 0
C   ============================================
C
  120 CONTINUE
      IF (SZ.GT.0.0D0) GOTO 140
      IF (NCHOP.EQ.0) GOTO 160
      DO 130 I = 1,NCHOP
        IF (ET(I).GT.0.0D0) GOTO 130
        WRITE (MT6,3000) I
        STOP
C
  130 CONTINUE
      GOTO 160
C
C   INCREMENT CHANNEL ENERGIES FOR THRESHOLD CASE WITH Z.GT.0
C   =========================================================
C
  140 CONTINUE
      IF (DEL3.EQ.0.0D0) GOTO 160
      WRITE (MT6,3010) DEL3,J
      DO 150 I = 1,NCHF
        ET(I) = ET(I) - DEL3
  150 CONTINUE
C
C   WRITE NUMBERS OF OPEN AND CLOSED CHANNELS AND CALCULATE KMETH
C   =============================================================
C
  160 CONTINUE
      SQK = ET(1)
C
C   SOME CHANNELS OPEN
C
      IF (NCHOP.EQ.0) GOTO 170
      KMETH = 2
      IF (IBUG.GT.0) WRITE (MT6,3030) SQK,NCHOP,NCHCL
      GOTO 180
C
C   ALL CHANNELS CLOSED
C
  170 CONTINUE
      KMETH = 2 - METH
      IF (IBUG.GT.0) WRITE (MT6,3040) NCHF,METH
      IF (IBUG.GT.0 .AND. METH.EQ.1) WRITE (MT6,3060) SQK
      A1 = SQK + DEL1
      IF (IBUG.GT.0 .AND. METH.EQ.0) WRITE (MT6,3050) SQK,A1,ECON
C
C   WRITE ENERGIES,ANGULAR MOMENTA AND RESIDUAL CHARGE
C   ==================================================
C
  180 CONTINUE
      IF (IBUG.EQ.0) GOTO 210
      WRITE (MT6,3070) (EL(I),I=1,NCHF)
      WRITE (MT6,3080) (ET(I),I=1,NCHF)
      WRITE (MT6,3020) SZ,EROR
C
C   WRITE OUT THE POTENTIAL MATRIX
C   ==============================
C
      WRITE (MT6,3180)
      DO 200 K = 1,LAMMX
        WRITE (MT6,3190) K
        DO 190 I = 1,NCHF
          WRITE (MT6,3320) (BLAM(I,J,K),J=1,NCHF)
  190   CONTINUE
  200 CONTINUE
      WRITE (MT6,3130)


C
C   FOR ALL CHANNELS CLOSED AND Z.GT.0 RESET MFG IF NECESSARY
C   =========================================================
C
  210 CONTINUE
      IF (MFG.GT.0) GOTO 220
      IF (NCHOP.GT.0) GOTO 220
      IF (SZ.EQ.0.0D0) GOTO 220
      DR = DR + DR
      MFG = 1
      RA = RA + DR
      RB = RA + DR
C
C   CALCULATE INTERVAL FOR RUNGE-KUTTA INTEGRATION FROM RB TO RA
C   ============================================================
  220 CONTINUE
      MD = 4
      H = 0.25D0* (RA-RB)
C
C   CALCULATE ASYPMTOTIC SOLUTIONS FOR THE CASE OF SOME CHANNELS OPEN
C   =================================================================
C
      IF (NCHOP.EQ.0) GOTO 390
      M = NCHOP + 1
C
C   CALCULATE SOLUTIONS AT RB USING ASYSM
C

  230 CONTINUE
      R3 = RB
      CALL ASYSM
C
C CHECK FOR USE OF AUTOMATIC MFG
C
      IF (IAUTO.EQ.0) GOTO 300
      IF (IBUG.GT.0) WRITE (MT6,3300)
      RFMX = 0.0D0
      DO 240 I = 1,NCHF
        IF (RFMX.LT.RFST(I)) RFMX = RFST(I)
  240 CONTINUE
      DRP = DR
      IF (MFG.EQ.0) DRP = DRP + DRP
      BBB = (RFMX-RB)/DRP
      AAA = BBB
      MFGX = INT(AAA)
      IF (IAUTO.EQ.2) GOTO 260
      IF (IPUNCH.EQ.0) GOTO 250
      WRITE (MT6,3230) MFGX
      WRITE (MT6,3310)
      GOTO 300
C
  250 CONTINUE
      IF (MFGX.GE.150) GOTO 270
      IF (IBUG.GT.0) WRITE (MT6,3240) MFGX
      IF (IBUG.GT.0) WRITE (MT6,3310)
      GOTO 300
C
  260 CONTINUE
      IF (MFGX.GT.0) GOTO 270
      IF (IBUG.GT.0) WRITE (MT6,3250)
      IF (IBUG.GT.0) WRITE (MT6,3310)
      GOTO 300
C
  270 CONTINUE
      DR = DRP
      MFGO = MFG
      MFG = MFG + MFGX
      IF (IPUNCH.EQ.0) GOTO 280
      IF (MFG.LE.MXMFG) GOTO 280
      MFG = MXMFG
      MFGXX = MFG - MFGO
      IF (IAUTO.EQ.2) WRITE (MT6,3260) MFGX,MFGXX,MFG
      IF (MFGXX.GT.0) GOTO 290
      WRITE (MT6,3290)
      WRITE (MT6,3310)
      IAUTO = 0
      GOTO 300
C
  280 CONTINUE
      IF (IBUG.GT.0 .AND. IAUTO.EQ.1) WRITE (MT6,3270) MFGX,MFG
      IF (IAUTO.EQ.2) WRITE (MT6,3280) MFGX,MFG
  290 CONTINUE
      IAUTO = 0
      RA = R1 + MFG*DR
      RB = RA + DR
      H = (RA-RB)/4.0D0
      IF (IBUG.GT.0) WRITE (MT6,3310)
      GOTO 230
C
  300 CONTINUE
      DO 340 I = 1,NCHF
        DO 320 J = 1,NCHOP
          DO 310 K = 1,2
            F2(K,I,J) = FX(K,I,J)
  310     CONTINUE
  320   CONTINUE
        IF (NCHCL.EQ.0) GOTO 340
        DO 330 J = M,NCHF
          F2(1,I,J) = FX(1,I,J)
  330   CONTINUE
  340 CONTINUE
C
C   CALCULATE SOLUTIONS AT RA BY INTEGRATING INWARDS FROM RB
C
      MM = 2
      DO 380 J = 1,NCHF
        IF (J.GT.NCHOP) MM = 1
        DO 370 K = 1,MM
          DO 350 I = 1,NCHF
            WF(I) = FX(K,I,J)
            WF1(I) = FX1(K,I,J)
  350     CONTINUE
          RS = RB
          CALL SOLV(RS,H,MD,WF,WF1)
          DO 360 I = 1,NCHF
            F1(K,I,J) = WF(I)
  360     CONTINUE
  370   CONTINUE
  380 CONTINUE
      GOTO 560
C
C   CALCULATE ASYMPTOTIC SOLUTIONS FOR THE CASE OF ALL CHANNELS CLOSED
C   ==================================================================
C
C   FOR METH = 0 SOLUTIONS ARE CALCULATED IN A DO LOOP OVER INPUT
C   ENERGIES (K = 1) AND INCREMENTED ENERGIES (K = 2). FOR METH = 1,
C   CALCULATION AT JUST THE INPUT ENERGY (SEE CPC SECTION 5.3)
C
  390 CONTINUE
      DO 540 K = 1,KMETH
C
C   INCREMENT ENERGIES FOR K = 2 AND METH = 0
C
        IF (K.EQ.1) GOTO 410
        DO 400 I = 1,NCHF
          ET(I) = ET(I) + DEL1
  400   CONTINUE
C
C   CALCULATE SOLUTIONS AT RB USING ASYSM
C
  410   CONTINUE
        R3 = RB
        CALL ASYSM
C
C   CHECK FOR USE OF AUTOMATIC MFG
C
        IF (K.EQ.2) GOTO 480
        IF (IAUTO.EQ.0) GOTO 480
        IF (IBUG.GT.0) WRITE (MT6,3300)
        RFMX = 0.0D0
        DO 420 I = 1,NCHF
          IF (RFMX.LT.RFST(I)) RFMX = RFST(I)
  420   CONTINUE
        BBB = (RFMX-RB)/DR
        AAA = BBB
        MFGX = INT(AAA)
        IF (IAUTO.EQ.2) GOTO 440
        IF (IPUNCH.EQ.0) GOTO 430
        WRITE (MT6,3230) MFGX
        WRITE (MT6,3310)
        GOTO 480
C
  430   CONTINUE
        IF (MFGX.GE.150) GOTO 450
        IF (IBUG.GT.0) WRITE (MT6,3240) MFGX
        IF (IBUG.GT.0) WRITE (MT6,3310)
        GOTO 480
C
  440   CONTINUE
        IF (MFGX.GT.0) GOTO 450
        IF (IBUG.GT.0) WRITE (MT6,3250)
        IF (IBUG.GT.0) WRITE (MT6,3310)
        GOTO 480
C
  450   CONTINUE
        MFGO = MFG
        MFG = MFG + MFGX
        IF (IPUNCH.EQ.0) GOTO 460
        IF (MFG.LT.MXMFG) GOTO 460
        MFG = MXMFG
        MFGXX = MFG - MFGO
        IF (IAUTO.EQ.2) WRITE (MT6,3260) MFGX,MFGXX,MFG
        IF (MFGXX.GT.0) GOTO 470
        WRITE (MT6,3290)
        WRITE (MT6,3310)
        IAUTO = 0
        GOTO 480
C
  460   CONTINUE
        IF (IBUG.GT.0 .AND. IAUTO.EQ.1) WRITE (MT6,3270) MFGX,MFG
        IF (IAUTO.EQ.2) WRITE (MT6,3280) MFGX,MFG
  470   CONTINUE
        IAUTO = 0
        RA = R1 + MFG*DR
        RB = RA + DR
        H = (RA-RB)/4.0D0
        IF (IBUG.GT.0) WRITE (MT6,3310)
        GOTO 410
C
  480   CONTINUE
        DO 500 I = 1,NCHF
          DO 490 J = 1,NCHF
            F2(K,I,J) = FX(1,I,J)
  490     CONTINUE
  500   CONTINUE
C
C   CALCULATE SOLUTIONS AT RA BY INTEGRATING INWARDS FROM RB
C
        DO 530 J = 1,NCHF
          DO 510 I = 1,NCHF
            WF(I) = FX(1,I,J)
            WF1(I) = FX1(1,I,J)
  510     CONTINUE
          RS = RB
          CALL SOLV(RS,H,MD,WF,WF1)
          DO 520 I = 1,NCHF
            F1(K,I,J) = WF(I)
  520     CONTINUE
  530   CONTINUE
  540 CONTINUE
C
C   RESET ENERGIES IF NECESSARY
C
      IF (KMETH.EQ.1) GOTO 560
      DO 550 I = 1,NCHF
        ET(I) = ET(I) - DEL1
  550 CONTINUE
C
C   SET CLOSED CHANNEL NORMALISATION PARAMETER NFG
C   ==============================================
C
  560 CONTINUE
      NFG = 0
      IF (NCHOP.GT.0 .OR. SZ.EQ.0.0D0) NFG = 1
C
C   CALCULATE ARRAY KJ(J) AND METHOD
C   ================================
C
C   FOR THE CASE OF ALL CHANNELS CLOSED AND Z.GT.0 THE ARRAY KJ(J) AND
C   THE PARAMETER METHOD DETERMINE THE METHOD OF NORMALISATION USED
C   IN SUBROUTINE FG (SEE CPC SECTION 5.4 AND SECTION 10.3(III) OF
C   PAPER III).
C
C   KJ(J) HAS VALUES 1 AND 2. KJ(J) = 1 UNLESS WJ .GT. 0,
C   WHERE WJ = 2*SZ/R1 - EL(J)*(EL(J)+1)/(R1*R1) + ET(J)
C   (SEE CPC EQ. (5.3))
C
C   METHOD = 1 IF KJ(J) = 1 FOR ALL J
C   METHOD = 2 IF KJ(J) = 2 FOR ANY J
C
C   FOR THE CASE OF ALL CHANNELS CLOSED AND Z = 0, THE METHOD OF
C   CALCULATION IS IDENTICAL TO THAT OF METHOD = 1 FOR Z.GT.0. FOR
C   THIS CASE KJ AND METHOD ARE SET TO 1. (NOTE THAT WITH Z = 0
C   WJ IS .LT.0 FOR ALL J, WHICH CORRESPONDS TO METHOD = 1)
C
C   INITIALISE METHOD AND KJ
C
      IF (NCHOP.NE.0) GOTO 590
      METHOD = 1
      DO 570 J = 1,NCHF
        KJ(J) = 1
  570 CONTINUE
      IF (NFG.EQ.1) GOTO 590
      A1 = 1.0D0/R1
      C1 = 2.0D0*SZ*A1
      C2 = A1*A1
      DO 580 J = 1,NCHF
        FL = EL(J)
        WJ = C1 - FL* (FL+1.0D0)*C2 + ET(J)
        IF (WJ.LT.0.0D0) GOTO 580
        KJ(J) = 2
        METHOD = 2
  580 CONTINUE
C
C   WRITE INFORMATION ON FOX-GOODWIN INTEGRATION
C   ============================================
C
  590 CONTINUE
      IF (IBUG.EQ.0) GOTO 600
      WRITE (MT6,3360)
      IF (MFG.GT.0) WRITE (MT6,3330) MFG
      IF (MFG.EQ.0) WRITE (MT6,3350)
      IF (NCHOP.EQ.0 .AND. SZ.GT.0.0D0) WRITE (MT6,3340) METHOD
C
C   CALCULATE BLIN, LINEAR FORM OF THE POTENTIAL MATRIX
C   ===================================================
C
  600 CONTINUE
      IF (MFG.EQ.0 .AND. ISOLN.EQ.0) GOTO 640
      LK = 0
      K2 = 0
      DO 630 K = 1,LAMMX
        K1 = K2 + 1
        K2 = KNZ(K)
        IF (K2.LT.K1) GOTO 620
        DO 610 L = K1,K2
          IJ = IJNZ(L)
          BLIN(L) = BLAMP(IJ+LK)
  610   CONTINUE
  620   LK = LK + MCHF*MCHF
  630 CONTINUE
      IF (MFG.EQ.0) GOTO 640
C
C   CALCULATE SOLUTIONS AT R1 AND R2 USING FOX-GOODWIN
C   ==================================================
C
      CALL FG
C
C   RENORMALISE CLOSED CHANNEL SOLUTIONS
C   ====================================
C
  640 CONTINUE
      IF (NCHCL.EQ.0) GOTO 750
      M = NCHOP + 1
      A5 = SQRT(SZ/2.0D0)
      DO 740 J = M,NCHF
        J1 = NDL(J)
        J2 = NDU(J)
        E1 = -ET(J)
        FL = EL(J)
        DO 730 K = 1,KMETH
C
C   FOR THE CASES OF SOME OPEN CHANNELS AND ALL CHANNELS CLOSED WITH
C   Z = 0, NORMALISATION IS ACCORDING TO EQ.(7.9) OF PAPER III
C
          IF (NFG.EQ.1) GOTO 690
C
C   CASE OF ALL CHANNELS CLOSED AND Z.GT.0
C   SCAN FOR DEGENERATE GROUPS OF CLOSED CHANNELS
C
          DO 650 L = J1,J2
            IF (KJ(L).EQ.2) GOTO 660
  650     CONTINUE
          GOTO 690
C
C   USE METHOD = 2 IN THIS CHANNEL. CALCULATE NORMALISATION FACTOR
C     - A1=SQRT(SZ/2.)*(FNU**(FL+.5))/(GAMMA(FNU+FL+1.)
C   (SEE EQ.(10.14) OF PAPER III)
C
  660     CONTINUE
          A1 = SZ/SQRT(E1)
          A2 = A1** (FL+0.5D0)
          A1 = A1 + FL
          NX = A1
          X = NX
          X = A1 - X
          B1 = 1.0D0
          IF (NX.EQ.0) GOTO 680
          DO 670 L = 1,NX
            B2 = L - 1
            B1 = B1* (A1-B2)
  670     CONTINUE
C
C    COMPUTE B2=GAMMA(1+X) FOR 0.LE.X.LE.1
C
  680     CONTINUE
          B2 = 1.0D0 +
     A       X* (-.5748646D0+X* (.9512363D0+
     B       X* (-.6998588D0+X* (.4245549D0-
     C       .1010678D0*X))))
          A1 = B1*B2
          A1 = A5*A2/A1
          GOTO 710
C
C   USE METHOD = 1 IN THIS CHANNEL. CALCULATE NORMALISATION FACTOR
C     - A1=1./SQRT(SUM OVER I OF (F1(K,I,J)**2+F2(K,I,J)**2))
C
  690     CONTINUE
          A1 = 0.0D0
          DO 700 I = 1,NCHF
            A1 = A1 + F1(K,I,J)**2 + F2(K,I,J)**2
  700     CONTINUE
          A1 = 1.0D0/SQRT(A1)
C
C   NORMALISE SOLUTIONS BY MULTIPLYING BY FACTOR A1
C
  710     CONTINUE
          DO 720 I = 1,NCHF
            F1(K,I,J) = A1*F1(K,I,J)
            F2(K,I,J) = A1*F2(K,I,J)
  720     CONTINUE
          IF (NCHOP.GT.0) GOTO 740
C
C   FOR ALL CHANNELS CLOSED RESET ENERGY
C
          E1 = E1 - DEL1
  730   CONTINUE
  740 CONTINUE
C
C   RENORMALIZE OPEN CHANNEL SOLUTIONS FOR Z.GT.1
C   =============================================
C
  750 CONTINUE
      IF (SZ.LE.1.0D0) GOTO 790
      IF (NCHOP.EQ.0) GOTO 790
      A1 = SQRT(SZ)
      DO 780 K = 1,2
        DO 770 I = 1,NCHF
          DO 760 J = 1,NCHOP
            F1(K,I,J) = F1(K,I,J)*A1
            F2(K,I,J) = F2(K,I,J)*A1
  760     CONTINUE
  770   CONTINUE
  780 CONTINUE
C
C   WRITE SOLUTIONS ONTO UNIT MT6
C   =============================
C
  790 CONTINUE
      IF (IBUG.EQ.0) RETURN
      WRITE (MT6,3090)
      DO 880 NPI = 1,2
        WRITE (MT6,3100) NPI
        M3 = NCHF
        IF (NCHOP.GT.0) GOTO 800
        WRITE (MT6,3140)
        GOTO 810
C
  800   CONTINUE
        IF (NCHCL.EQ.0) WRITE (MT6,3110)
        IF (NCHCL.NE.0) WRITE (MT6,3160)
  810   CONTINUE
        M1 = (M3-1)/10 + 1
        M2 = 1
        DO 830 I1 = 1,M1
          IF (I1.GT.1) WRITE (MT6,3130)
          M = M2 + 9
          IF (M.GT.NCHF) M = NCHF
          DO 820 I = 1,NCHF
            IF (NPI.EQ.1) WRITE (MT6,3320) (F1(1,I,J),J=M2,M)
            IF (NPI.EQ.2) WRITE (MT6,3320) (F2(1,I,J),J=M2,M)
  820     CONTINUE
          M2 = M2 + 10
  830   CONTINUE
        IF (KMETH.EQ.1) GOTO 880
        IF (NCHOP.GT.0) GOTO 840
        WRITE (MT6,3150)
        GOTO 850
C
  840   CONTINUE
        M1 = (NCHOP-1)/10 + 1
        M3 = NCHOP
        IF (NCHCL.EQ.0) WRITE (MT6,3120)
        IF (NCHCL.NE.0) WRITE (MT6,3170)
  850   CONTINUE
        M2 = 1
        DO 870 I1 = 1,M1
          M = M2 + 9
          IF (I1.GT.1) WRITE (MT6,3130)
          IF (M.GT.M3) M = M3
          DO 860 I = 1,NCHF
            IF (NPI.EQ.1) WRITE (MT6,3320) (F1(2,I,J),J=M2,M)
            IF (NPI.EQ.2) WRITE (MT6,3320) (F2(2,I,J),J=M2,M)
  860     CONTINUE
          M2 = M2 + 10
  870   CONTINUE
  880 CONTINUE
C
C   FORMATS
C
 3000 FORMAT (/,'  ***ERROR***  ET(',I2,
     A       ') = 0.0. PROGRAM CANNOT HANDLE THE CASE ',/,15X,
     B       'OF ANY CHANNEL ENERGY = 0.0 FOR Z = 0.')
 3010 FORMAT (/' ENERGIES INCREMENTED BY DEL3=',E14.6,' TO GIVE ET(',I2,
     A       ')=0.0')
 3020 FORMAT (/,'  RESIDUAL CHARGE =',F4.1,5X,'EROR =',E14.6)
 3030 FORMAT (/,'  CASE OF SOME CHANNELS OPEN',/,5X,'  INPUT ENERGY =',
     A       E15.6,/,5X,'  NO OF OPEN CHANNELS =',I3,/,5X,
     B       '  NO OF CLOSED CHANNELS = ',I2)
 3040 FORMAT (/,'  CASE OF ALL CHANNELS CLOSED,'/,5X,
     A       '  NO OF FREE CHANNELS = ',I2,/,5X,'  USE METH =',I2)
 3050 FORMAT (5X,'  INPUT ENERGY =',E15.6,/,5X,'  INCREMENTED ENERGY =',
     A       E15.6,/,5X,'  CONVERGED ENERGY =',E15.6)
 3060 FORMAT (5X,'  INPUT ENERGY =',5E15.6)
 3070 FORMAT (/,'  ANGULAR MOMENTA FOR EACH CHANNEL -',5 (/,6F15.3))
 3080 FORMAT (/,'  ENERGIES FOR EACH CHANNEL - ',5 (/,6E15.6))
 3090 FORMAT (///' RADIAL SOLUTIONS FROM ASYMPT','  (COLUMN J FOR ',
     A       'BOUNDARY CONDITION J, ROW I FOR CHANNEL I)'/1X,28 ('*'))
 3100 FORMAT (/5X,'SOLUTIONS AT R',I1,/5X,15 ('-'))
 3110 FORMAT (/,10X,'SIN SOLUTIONS',/)
 3120 FORMAT (/,10X,'COS SOLUTIONS',/)
 3130 FORMAT ('0')
 3140 FORMAT (/,10X,'DECAYING SOLUTIONS AT INPUT ENERGY',/)
 3150 FORMAT (/,10X,'DECAYING SOLUTIONS AT INCREMENTED ENERGY',/)
 3160 FORMAT (/,10X,
     A'SIN SOLUTIONS FOR OPEN CHANNELS, DECAYING SOLUTIONS FOR CLOSED CH
     BANNELS',/)
 3170 FORMAT (/,10X,'COS SOLUTIONS FOR OPEN CHANNELS',/)
 3180 FORMAT (/,'  POTENTIAL MATRIX BLAM -')
 3190 FORMAT (/,'  COEFFICIENTS OF 1/R**(1+',I1,')')
 3200 FORMAT (/,
     A'  ***ERROR***  WHEN SOLUTIONS ARE TO BE CALCULATED AT THE INCREME
     BNTED ENERGY,'/,15X,
     C     'THE ENERGY INCREMENT, DEL1, MUST BE POSITIVE. DEL1 READ AS '
     D       ,E12.4,/,15X,'(SEE CPC SECTION 2.6(I)')
 3210 FORMAT (/,
     A'  ***WARNING***  DEL1 LIES OUTSIDE THE RANGE DEFINED BY CPC EQ.(2
     B.18).',/,17X,'FOR THIS CASE THE RANGE IS (',E12.4,' , ',E12.4,
     C       ') WHEREAS',/,17X,'DEL1 IS',E12.4,
     D       '. THIS MAY RESULT IN LOSS OF ACCURACY IN THE SOLUTIONS')
 3220 FORMAT (/,'  ***ERROR***  DEL1 (',E12.4,
     A       ') IS GREATER THAN ABS(ET(1)) = ',E12.4,/,15X,
     B       'THIS MEANS THAT ON INCREMENTING THE ENERGIES NOT ALL,'/,
     C       15X,'CHANNELS WOULD REMAIN CLOSED.')
 3230 FORMAT (
     A '  CONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=1) BUT NOT USED AS'
     B       ,/,
     C      '  FUNCTION OUTPUT REQUIRED. INCREASE IN MFG CALCULATED WAS'
     D       ,I5)
 3240 FORMAT (
     A '  CONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=1) BUT NOT USED AS'
     B       ,/,'  INCREASE IN MFG =',I5,' IS LESS THAN 150.')
 3250 FORMAT (
     A'  UNCONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=2) BUT NOT USED AS
     B',/,'  INCREASE IN MFG IS ZERO')
 3260 FORMAT (
     A '  UNCONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=2) BUT INCREASE '
     B       ,/,'  IN MFG CALCULATED (',I5,
     C       ') MAKES MFG GREATER THAN THAT ALLOWED FOR',/,
     D '  BY DIMENSIONS WHEN FUNCTION OUTPUT IS REQUIRED. MFG INCREASED'
     E       ,/,'  BY',I5,' TO MAXIMUM ALLOWED FOR BY DIMENSIONS (',I5,
     F       ').')
 3270 FORMAT (
     A     '  CONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=1) AND USED TO'
     B       ,'  INCREASE MFG BY',I5,' TO',I5)
 3280 FORMAT (
     A   '  UNCONDITIONAL AUTOMATIC MFG SPECIFIED (IAUTO=2) AND USED TO'
     B       ,'  INCREASE MFG BY',I5,' TO',I5)
 3290 FORMAT ('  AUTOMATIC MFG OPTION CANCELLED AS MFG ALREADY EQUALS ',
     A       /,'  MAXIMUM ALLOWED FOR BY DIMENSIONS.')
 3300 FORMAT (/,2X,63 ('*'))
 3310 FORMAT (2X,63 ('*'))
 3320 FORMAT (10E12.4)
 3330 FORMAT (' FOX-GOODWIN INTEGRATION USED WITH MFG =',I5)
 3340 FORMAT (' FUNCTIONS NORMALISED USING FOX-GOODWIN METHOD =',I2)
 3350 FORMAT ('  FOX-GOODWIN INTEGRATION NOT USED')
 3360 FORMAT (//)
      END
CEND********************************************************************
      SUBROUTINE ASYPCK(JAUTO,F0,F0D)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C                           PROGRAM ASYPCK
C                           **************
C
C         VERSION AS PUBLISHED IN COMPUTER PHYSICS COMMUNICATIONS
C         WITH CHANGES DESCRIBED IN THE ASYPCK LOG AND BELOW
C         THIS VERSION IS KNOWN AS
C
C                  ASYPCK.ASYT.V04        (APRIL 1980)
C
C-----------------------------------------------------------------------
C
C   SOLVES THE COUPLED DIFFERENTIAL EQUATIONS OF ELECTRON-ATOM
C   COLLISION THEORY THAT ARE VALID AT LARGE RADIAL DISTANCES (THE
C   ASYMPTOTIC REGION)
C
C   COMPUTES   - SOLUTIONS OF THE EQUATIONS AT TWO RADIAL POINTS
C              - SOLUTIONS AND THEIR FIRST DERIVATIVES AT A SINGLE
C                RADIAL POINT
C              - RADIAL FUNCTIONS AT A MESH OF RADIAL POINTS
C
C   REFERENCES - PROGRAM ASYPCK, CREES, COMPUT.PHYS.COMMUN. (1979),
C                IN PRESS. REFERRED TO AS CPC ON COMMENT CARDS
C              - PROGRAM IMPACT, CREES,SEATON AND WILSON, COMPUT.
C                PHYS.COMMUN., (1978), VOL.15, 23. REFERRED TO AS
C                PAPER III ON COMMENT CARDS
C              - PROGRAM ASYM, NORCROSS, COMPUT.PHYS.COMMUN., (1969),
C                VOL.1, 88.
C              - FOX-GOODWIN TECHNIQUE, NORCROSS AND SEATON,
C                J.PHYS.B., (1973), VOL.6, 614.
C
C-----------------------------------------------------------------------
C
C   ADDITIONAL FEATURES NOT DESCRIBED IN CPC
C   ========================================
C
C   1. VERSION OF ASYPCK FOR CRAY-1 MACHINES
C
C      THE PUBLISHED VERSION OF ASYPCK HAS BEEN AMENDED TO MAKE
C      USE OF THE SPECIAL VECTOR PROCESSING FEATURE OF CRAY-1
C      MACHINES AND CRAY ASSEMBLER (CAL) LIBRARY ROUTINES. THIS CODE
C      IS ACTIVATED BY SPECIFYING THE APPROPRIATE MACH PARAMETER TO
C      THE PREPROCESSOR ASYPRO (SEE COMMNETS IN ASYPRO UNDER THE
C      SECTION 'CHANGES FROM THE PUBLISHED VERSION'). THIS CRAY
C      VERSION CAN BE CONSIDERABLY QUICKER THAN THE NON-CRAY
C      VERSION, ESPECIALLY WHERE LARGE VALUES OF THE FOX-GOODWIN
C      PARAMETER MFG ARE INVOLVED.
C
C   2. SINGLE OR DOUBLE PRECISION ON IBM MACHINES
C
C      FOR RUNNING THE PROGRAM ASYPCK ON IBM MACHINES, THERE IS
C      THE OPTION OF SPECIFYING A SINGLE OR DOUBLE PRECISION VERSION.
C      AN ADDITIONAL PARAMETER (PREC) IS READ BY THE PREPROCESSOR.
C      IF A MACH PARAMETER IS SPECIFIED TO ASYPRO TO CREATE A CDC OR
C      CRAY VERSION OF ASYPCK THEN PREC IS IGNORED. SEE COMMENTS
C      IN THE PROGRAM ASYPRO.
C
C   3. AUTOMATIC MFG FACILITY
C
C      THE PROGRAM ASYPCK HAS BEEN CHANGED TO INCLUDE A FACILITY
C      FOR AUTOMATICALLY SETTING THE FOX-GOODWIN INTEGRATION PARAMETER
C      MFG. BY THIS IT IS MEANT THAT IF THE PROGRAM FINDS THAT LONG
C      INWARD INTEGRATION ARE REQUIRED WITH THE GIVEN INPUT VALUE
C      OF MFG, THE PROGRAM CAN RESET MFG TO AVOID SUCH INTEGRATIONS
C      AND RECALL SUBROUTINE ASYSM TO CALCULATE SOLUTIONS AT THE
C      RESET VALUE OF RB
C         CONTROL OF THIS FACILITY IS BY A NEW INPUT PARAMETER (IAUTO)
C      READ IN AS THE FIFTH NUMBER (FORMAT(5I5)) ON THE FIRST INPUT
C      DATA CARD. IAUTO TAKES THE VALUES 0, 1 AND 2.
C      IAUTO = 0: ASYPCK RUNS AS THE STANDARD PUBLISHED VERSION, I.E.
C                 WITHOUT THE AUTOMATIC MFG FACILITY.
C      IAUTO = 1: 'CONDITIONAL MFG FACILITY'. IF IAUTO = 1, ASYPCK
C                 WILL CALCULATE ANY INCREMENT IN MFG BUT WILL NOT
C                 IMPLEMENT THE AUTOMATIC FACILITY IF EITHER THE
C                 INCREASE IN MFG IS LESS THAN 150 OR RADIAL FUNCTION
C                 OUTPUT REQUIRED FOR THAT RUN (I.E. JFILE SPECIFIED
C                 AS NEGATIVE).
C      IAUTO = 2: 'UNCONDITIONAL MFG FACILITY'. IF IAUTO = 2, ASYPCK
C                 WILL CALCULATE ANY INCREMENT TO MFG AND WILL ALWAYS
C                 RESET MFG AND RECALL ASYSM WITH THE ONE FOLLOWING
C                 EXCEPTION. IF RADIAL FUNCTION OUTPUT IS REQUIRED,
C                 THE MAXIMUM VALUE OF MFG IS LIMITED BY DIMENSIONS.
C                 IF THE INCREASED MFG IS GREATER THAN THE MAXIMUM
C                 ALLOWED, MFG IS SET TO THE MAXIMUM.
C      THIS AUTOMATIC MFG FACILITY OPERATES ON BOTH THE CASES OF
C      SOME OPEN CHANNELS AND ALL CLOSED CHANNELS. IN THE LATTER, IF
C      SOLUTIONS ARE REQUIRED AT BOTH THE INPUT AND INCREMENTED
C      ENERGIES, ANY INCREASE IN MFG IS DETERMINED FROM THE
C      CALCULATIONS FOR THE INPUT ENERGIES.
C
C-----------------------------------------------------------------------
C
C *** MXMFG MUST BE AT LEAST 54 FOR COMMON BLOCK ALIGNMENT ***
C
      PARAMETER (MXMFG=540)
C
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MCHF,MCHF,MLMX),
     A       F1(2,MCHF,MCHF),F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,
     B       DEL1,SZ,R1,R2,R0,RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,
     C       ISOLN,KMETH,IPUNCH,NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,
     D       JFILE,KFILE,MFGP1,IALT,JALT,KALT
C
      DIMENSION F0(MCHF,MCHF,2),F0D(MCHF,MCHF,2)
C
      COMMON /AUTO/RFST(MCHF),IAUTO
      COMMON /ABD/A(MCHF,MCHF),B(MCHF,MCHF),D(MCHF)
C
      DIMENSION XX(MXMFG),JK(2)
C
      CHARACTER*4 IHED(3)
      DATA IHED/'DATA','SOLN','FNCS'/
C
      IAUTO = JAUTO
      MDE = 0
C
C   CHECK VALIDITY OF CONTROL PARAMETERS
C   ====================================
C
      IF (MDE.NE.0 .AND. MDE.NE.1) GOTO 10
      IF (METH.NE.0 .AND. METH.NE.1) GOTO 10
      IF (KALT.NE.0 .AND. KALT.NE.1) GOTO 10
      IF (JALT.NE.0 .AND. JALT.NE.1) GOTO 10
      IF (ISOLN.NE.0 .AND. ISOLN.NE.1) GOTO 10
      IF (MFG.LT.0) GOTO 10
      IF (IALT.LT.0 .OR. IALT.GT.2) GOTO 10
      IF (IBUG.LT.0 .OR. IBUG.GT.2) GOTO 10
      GOTO 20
C
   10 CONTINUE
      WRITE (MT6,3150)
      STOP
C
C   CHECK DEFAULT FILE OPTIONS
C   ==========================
C
   20 CONTINUE
      IF (IFILE.LE.0) IFILE = 5
      IF (JFILE.LT.0 .AND. KFILE.LE.0) KFILE = 11
C
C   CHECK FOR INVALID SYSTEM INFORMATION
C   ====================================
C
      IF (NCHF.LE.0) GOTO 30
      IF (LAMMX.LE.0) GOTO 30
      IF (SZ.LT.0.0) GOTO 30
      IF (EROR.GT.1.0D-5) GOTO 40
      EROR = 0.0001D0
      WRITE (MT6,3170)
      GOTO 40
C
   30 CONTINUE
      WRITE (MT6,3160) NCHF,LAMMX,SZ
      STOP
C
   40 CONTINUE
C
C   CHECK CHANNEL ENERGIES FOR DEGENERACIES
C   =======================================
C
      ERORC = EROR
      IF (SZ.GT.1.5D0) ERORC = EROR*SZ*SZ
      KB = 2
      KA = 1
   50 CONTINUE
      IF (KB.GT.NCHF) GOTO 100
      KC = 0
      A1 = ET(KA)
      A3 = A1 + ERORC
      DO 80 J = KB,NCHF
        A2 = ET(J)
        IF (A2.EQ.A1) GOTO 70
        IF (A2.LE.A3) GOTO 60
        WRITE (MT6,3120) J,A2,KA,A1
        STOP
C
   60   CONTINUE
        IF (ABS(A2-A1).GT.ERORC) GOTO 90
cd        WRITE (MT6,3130) J,A2,KA,A1
        ET(J) = A1
   70   KC = KC + 1
   80 CONTINUE
   90 CONTINUE
      KB = KB + KC + 1
      KA = KB - 1
      GOTO 50
C
C   CALCULATE IPUNCH, KMETH AND SET JFILE = ABS(JFILE)
C   ===================================================
C
  100 CONTINUE
      KMETH = 2 - METH
      IPUNCH = 0
      IF (JFILE.GE.0) GOTO 110
      IPUNCH = 1
      JFILE = -JFILE
      REWIND KFILE
      IF (MFG.EQ.0) MFG = 1
C
C   SET DELNU  (SEE SECTION 9.1 OF CPC)
C   =========
C
  110 CONTINUE
      DELNU = 1.15D0
C
C   CHECK DIMENSIONS
C   ================
C
      IF (NCHF.LE.MCHF) GOTO 120
      WRITE (MT6,3090) NCHF
      STOP
C
  120 CONTINUE
      IF (IPUNCH.EQ.0) GOTO 130
      IF (MFG.LE.MXMFG) GOTO 130
      WRITE (MT6,3110) MFG
      STOP
C
  130 CONTINUE
      IF (LAMMX.LE.MLMX) GOTO 140
      WRITE (MT6,3100) LAMMX
      STOP
C
C   CALCULATE R0,R1,R2,RA,RB AND DR
C   ===============================
C
  140 CONTINUE
      IF (MDE.EQ.0) GOTO 160
      IF (R1.LT.R2) GOTO 150
      DR = R1
      R1 = R2
      R2 = DR
      WRITE (MT6,3140)
  150 CONTINUE
      DR = (R2-R1)*0.5D0
      R0 = R1 + DR
      GOTO 170
C
  160 CONTINUE
      R1 = R0 - DR
      R2 = R0 + DR
  170 CONTINUE
      IF (IBUG.GT.0) WRITE (MT6,3010) R1,R2,R0,DR
      IF (IPUNCH.GT.0 .AND. MFG.EQ.0) MFG = 1
      IF (MFG.EQ.0) GOTO 180
      RA = R1 + DR*MFG
      RB = RA + DR
      GOTO 190
C
  180 CONTINUE
      RA = R1
      RB = R2
      DR = DR*0.5D0
C
C   CALCULATE SOLUTIONS AT R1 AND R2
C   ================================
C
  190 CONTINUE
      CALL ASYMPT
C
C   CALCULATE INTER
C   ===============
C
      INTER = 0
      IF (METH.EQ.1) GOTO 220
      IF (NCHOP.NE.0) GOTO 220
      IF (JALT.EQ.0) GOTO 200
      INTER = 1
      GOTO 210
C
  200 CONTINUE
      IF (IPUNCH.EQ.0) GOTO 220
  210 CONTINUE
      B2 = (ECON-SQK)/DEL1
      B1 = 1.0D0 - B2
C
C   WRITE INFORMATION ONTO JFILE
C   ============================
C
  220 CONTINUE
      IF (JFILE.EQ.0) GOTO 300
      HR = (R2-R1)*0.5D0
      MFGP2 = MFG + 2
      WRITE (JFILE,3250) IHED(1)
      WRITE (JFILE,3210) MDE,ISOLN,MFGP2,JFILE
      WRITE (JFILE,3210) METH,IALT,JALT,KALT
      WRITE (JFILE,3210) IPUNCH,INTER
      WRITE (JFILE,3220) R1,R2,R0,HR
      WRITE (JFILE,3210) NCHF,NCHOP,NCHCL
      WRITE (JFILE,3220) (EL(I),I=1,NCHF)
      WRITE (JFILE,3230) (ET(I),I=1,NCHF)
      WRITE (JFILE,3220) SZ,EROR,DEL1,ECON
      WRITE (JFILE,3210) LAMMX
      DO 240 I = 1,NCHF
        DO 230 J = 1,NCHF
          WRITE (JFILE,3230) (BLAM(I,J,K),K=1,LAMMX)
  230   CONTINUE
  240 CONTINUE
C
C   WRITE SOLUTIONS AT R1 AND R2 ONTO JFILE, INTERPOLATING IF WANTED
C   ================================================================
C
      WRITE (JFILE,3250) IHED(2)
      JK(1) = NCHF
      JK(2) = NCHOP
      IF (NCHOP.EQ.0) JK(2) = NCHF
      IF (IALT.EQ.0) GOTO 290
      DO 260 K = 1,KMETH
        M = JK(K)
        DO 250 I = 1,NCHF
          WRITE (JFILE,3230) (F1(K,I,J),J=1,M)
  250   CONTINUE
  260 CONTINUE
      IF (INTER.EQ.1) CALL INTERP(F1,1)
      DO 280 K = 1,KMETH
        M = JK(K)
        DO 270 I = 1,NCHF
          WRITE (JFILE,3230) (F2(K,I,J),J=1,M)
  270   CONTINUE
  280 CONTINUE
      IF (INTER.EQ.1) CALL INTERP(F2,2)
  290 CONTINUE
C
C   CALCULATE SOLUTIONS AT R0
C   =========================
C
  300 CONTINUE
      IF (ISOLN.EQ.0) GOTO 350
      CALL SOLNS(F0,F0D)
C
C   WRITE SOLUTIONS AT R0 ONTO JFILE, INTERPOLATING IF WANTED
C   =========================================================
C
      IF (JFILE.EQ.0) GOTO 350
      IF (IALT.EQ.1) GOTO 350
      DO 320 K = 1,KMETH
        M = JK(K)
        DO 310 I = 1,NCHF
          WRITE (JFILE,3230) (F0(I,J,K),J=1,M)
  310   CONTINUE
  320 CONTINUE
      IF (INTER.EQ.1) CALL INTERP(F0,3)
      DO 340 K = 1,KMETH
        M = JK(K)
        DO 330 I = 1,NCHF
          WRITE (JFILE,3230) (F0D(I,J,K),J=1,M)
  330   CONTINUE
  340 CONTINUE
      IF (INTER.EQ.1) CALL INTERP(F0D,4)
      GOTO 370
C
C   INTERPOLATE FOR CASE OF JFILE EQUAL O
C   =====================================
C
  350 CONTINUE
      IF (JFILE.NE.0) GOTO 370
      IF (INTER.EQ.0) GOTO 370
      IF (IALT.LT.1) GOTO 360
      CALL INTERP(F1,1)
      CALL INTERP(F2,2)
  360 CONTINUE
      IF (ISOLN.EQ.0) GOTO 370
      IF (IALT.EQ.1) GOTO 370
      CALL INTERP(F0,3)
      CALL INTERP(F0D,4)
C
  370 CONTINUE
      IF (IPUNCH.EQ.0) RETURN
C
C   WRITE RADIAL FUNCTION INFORMATION ONTO JFILE
C   ============================================
C
      IF (IBUG.NE.0) WRITE (MT6,3060)
      WRITE (JFILE,3250) IHED(3)
C
C   CALCULATE RADIAL POINTS
C
      XX(1) = R1
      DO 380 M = 1,MFGP1
        XX(M+1) = XX(M) + DR
  380 CONTINUE
      WRITE (JFILE,3220) (XX(M),M=1,MFGP2)
      IF (IBUG.EQ.0) GOTO 390
      WRITE (MT6,3180)
      WRITE (MT6,3050) (XX(M),M=1,MFGP2)
C
C   READ A, B, AND D MATRICES IF RADIAL FUNCTION OUTPUT REQUIRED
C   ============================================================
C
  390 CONTINUE
      IF (NCHOP.EQ.0) GOTO 480
      DO 410 I = 1,NCHOP
        DO 400 J = 1,NCHOP
          READ (IFILE,3240) A(I,J),B(I,J)
          WRITE (JFILE,3240) A(I,J),B(I,J)
  400   CONTINUE
  410 CONTINUE
      IF (IBUG.EQ.0) GOTO 440
      WRITE (MT6,3020)
      DO 420 I = 1,NCHOP
        WRITE (MT6,3260) (A(I,J),J=1,NCHOP)
  420 CONTINUE
      WRITE (MT6,3030)
      DO 430 I = 1,NCHOP
        WRITE (MT6,3260) (B(I,J),J=1,NCHOP)
  430 CONTINUE
  440 CONTINUE
      IF (NCHCL.EQ.0) GOTO 500
      M = NCHOP + 1
      DO 460 I = M,NCHF
        DO 450 J = 1,NCHOP
          READ (IFILE,3240) A(I,J)
          WRITE (JFILE,3240) A(I,J)
  450   CONTINUE
  460 CONTINUE
      IF (IBUG.EQ.0) GOTO 500
      WRITE (MT6,3040)
      DO 470 I = M,NCHF
        WRITE (MT6,3260) (A(I,J),J=1,NCHOP)
  470 CONTINUE
      GOTO 500
C
  480 CONTINUE
      DO 490 I = 1,NCHF
        READ (IFILE,3240) D(I)
        WRITE (JFILE,3240) D(I)
  490 CONTINUE
      IF (IBUG.EQ.0) GOTO 500
      WRITE (MT6,3040)
      WRITE (MT6,3260) (D(I),I=1,NCHF)
  500 CONTINUE
C
C   CALCULATE RADIAL FUNCTION OUTPUT
C   ================================
C
      IF (NCHOP.NE.0) CALL OMEGA
      IF (NCHOP.EQ.0) CALL BOUNDC
C
 3010 FORMAT (/,'  R1 =',F12.5,'  R2 =',F12.5,'  R0 =',F12.5,'  DR =',
     A       F12.5)
 3020 FORMAT (/,'  A MATRIX',/,2X,8 ('*'))
 3030 FORMAT (/,'  B MATRIX',/,2X,8 ('*'))
 3040 FORMAT (/,'  D MATRIX',/,2X,8 ('*'))
 3050 FORMAT (10F12.5)
 3060 FORMAT (///'  RADIAL FUNCTION OUTPUT',/,2X,22 ('*'))
 3090 FORMAT (/,'  ***ERROR***  VALUE OF NCHF READ IN ',I5,
     A       ' GREATER T   HAN THAT ALLOWED FOR BY DIMENSIONS')
 3100 FORMAT (/,'  ***ERROR***  VALUE OF LAMMX READ IN ',I5,
     A       ' GREATER    THAN THAT ALLOWED FOR BY DIMENSIONS')
 3110 FORMAT (/,'  ***ERROR***  VALUE OF MFG READ IN',I5,
     A       ' GREATER THA   N THAT ALLOWED FOR BY DIMENSIONS')
 3120 FORMAT (/,'  ***ERROR***  ET(',I2,') =',E13.6,
     A       ' IS GREATER THAN    ET(',I2,') =',E13.6,/,15X,
     B       'ENERGIES SHOULD BE IN ORDER OF NON-INC REASING ENERGY')
 3130 FORMAT (/,'  ***WARNING***  ET(',I2,') READ AS',E13.6,
     A       '. SET EQUAL TO ET(',I2,') =',E13.6)
 3140 FORMAT (/,'  ***WARNING***  R1 READ IN AS GREATER THAN R2.',/,17X,
     A       'R1 AND R2 HAVE BEEN INTERCHANGED')
 3150 FORMAT (//,'  ***ERROR IN INPUT CONTROL PARAMETERS***')
 3160 FORMAT (//,'  ***ERROR IN SYSTEM INFORMATION READ FROM IFILE***',
     A       /,5X,'NCHF, LAMMX AND SZ READ AS',2I5,E13.6)
 3170 FORMAT (//,'  ***WARNING***  EROR READ AS LESS THAN 1.E-5.',/,17X,
     A       'EROR RESET TO DEFAULT VALUE OF 0.0001')
 3180 FORMAT (/,'  RADIAL POINTS AT WHICH FUNCTION OUTPUT CALCULATED')
 3210 FORMAT (5I5,15X,8A4)
 3220 FORMAT (6E13.6)
 3230 FORMAT (5E16.9)
 3240 FORMAT (2E12.5)
 3250 FORMAT (A4,36X,8A4)
 3260 FORMAT (9E13.5)
      END
CEND********************************************************************
      SUBROUTINE ASYSM
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     (SEE CPC SECTION 5.2)
C
C   ASYSM IS CALLED BY ASYMPT TO CALCULATE SOLUTIONS AT RB, WHICH
C   IS KNOWN INTERNALLY AS RO
C
C   THIS IS A MODIFIED VERSION OF THE PROGRAM ASYM OF NORCROSS,
C   COMPUT. PHYS. COMMUN. (1969), VOL.1, 88. THE MODIFICATIONS ARE
C   DESCRIBED IN SECTION 7 AND APPENDIX C OF PAPER III AND ON COMMENT
C   CARDS BELOW.
C
C ---------------------------------------------------------------------
C
C   INPUT DATA -
C   ************
C
C    ET(N)=ENERGIES (RYDBERG UNITS)
C          ALL OPEN CHANNELS MUST PRECEED ALL CLOSED CHANNELS
C          DEGENERATE CHANNELS MUST BE GROUPED TOGETHER.
C    EL(N)=ANGULAR MOMENTA VALUES. MUST ALWAYS BE INCLUDED IN ARRAY CN
C        N=NUMBER OF CHANNELS (LESS THAN OR EQUAL TO NCHFMX)
C       SZ=RESIDUAL CHARGE (GREATER THAN OR EQUAL TO 0)
C       CN=COEFFICIENTS OF (1/R)**(K+1). A SYMMETRIC MATRIX
C          POSITIVE/NEGATIVE FOR ATTRACTIVE/REPULSIVE POTENTIALS
C        M=MAXIMUM VALUE OF K IN ABOVE SERIES
C       RO=VALUE OF R (ATOMIC UNITS) AT WHICH SOLUTION DESIRED)
C       DR=INITIAL ESTIMATE OF STEP-LENGTH FOR INWARD INTEGRATIONS
C     EROR=CRITERION FOR CONVERGENCE, ENERGY DEGENERACY AND INTEGRATION.
C          MUST BE GREATER THAN OR EQUAL TO 1.E-5
C
C ---------------------------------------------------------------------
C
C   PARAMETERS SET-UP INTERNALLY -
C   ******************************
C
C      NZD=RESIDUAL CHARGE (INTEGER SZ)
C     DELE=SOME SMALL POSITIVE ENERGY. TYPICALLY 0.07*SZ*SZ
C          FOR DETAILS SEE NORCROSS,CPC,1,88,1969
C     IOUT=UNIT NUMBER FOR OUTPUT. IOUT EQUALS THE EXTERNAL UNIT MT6
C     IBUG=DEBUGGING PARAMETER, TAKING VALUES 0 AND 1. THE INPUT
C          PARAMETER IBUG IS CALLED JBUG IN ASYSM. IBUG = 0 (NO
C          DATASETS WRITTEN ONTO UNIT IOUT) IF JBUG = 0 OR 1. IBUG = 1
C          (DATASETS WRITTEN ONTO UNIT IOUT) IF JBUG = 2.
C
C ---------------------------------------------------------------------
C
C   OUTPUT RESULTS -
C   ****************
C
C     F(K,I,J) IS I-TH MEMBER OF J-TH BOUNDARY CONDITION
C              (ORDERED AS INPUT ET(J))
C
C     F(1,I,J) =   REGULAR SOLUTIONS
C     F(2,I,J) = IRREGULAR SOLUTIONS
C   FDR(1,I,J) = DERIVATIVES OF   REGULAR SOLUTIONS
C   FDR(2,I,J) = DERIVATIVES OF IRREGULAR SOLUTIONS
C
C   FOR OPEN CHANNELS
C     F(1,I,I) ASYMPTOTIC TO (ET(I)**(-1/4))*SIN(PHI)
C     F(2,I,I) ASYMPTOTIC TO (ET(I)**(-1/4))*COS(PHI)
C
C   FOR CLOSED CHANNELS
C     F(1,I,I) ASYMPTOTIC TO (ET(I)**(-1/4)*EXP(-PHI)
C               FOR ET(I) = 0.0, ET(I) ARE REPLACED IN
C               ASYMPTOTIC AMPLITUDE BY 2.0*SZ/R
C     F(2,I,I) ASYMPTOTIC SOLUTIONS NOT CALCULATED
C
C
C ---------------------------------------------------------------------
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-4*MCHF-3)
C
      COMMON /MAT1/BLIN(MXMAT1),RO,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MCHF,MCHF,MLMX),E2(MCHF),
     B       PP(12,10),T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM1(MCHF,15),GAM2(MCHF,15),VF1(MCHF),VF2(MCHF),
     D       VFDR1(MCHF),VFDR2(MCHF),Z1,Z2,DUM(MXDUM),DUM1(1,1,1)
      COMMON /SAVE/EL(MCHF),ET(MCHF),CN(MCHF,MCHF,MLMX),FC(2,MCHF,MCHF),
     A       FD(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,RC,
     B       RAA,RBB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,
     C       IPUNCH,N,NCHOP,NCHCL,M,MT6,JBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
      COMMON /CMN04/HY,NHY,JJ
      COMMON /AUTO/RFST(MCHF),IAUTO
C
      DIMENSION WFD(MCHF),WFD1(MCHF),ISF(MCHF),WF(MCHF),WF1(MCHF)
C
C ---------------------------------------------------------------------
C
C   COMMENTS -
C   **********
C
C      NOT APPLICABLE FOR
C           1) SZ = 0 IF ANY ET(J) = 0
C           2) SZ LESS THAN 0
C      RO INCREASED TO RF UNTIL SOLUTION ACCURATE TO 1.E-4
C           OBTAINED. RESULT THEN INTEGRATED BACK TO RO
C      LARGE RF MAY BE REQUIRED (WARNING PRINTED) FOR CASES
C           1) LARGE POSITIVE ENERGIES JUST BELOW THRESHOLD
C           2) SZ = 0 JUST ABOVE THRESHOLD
C           3) NEARLY DEGENERATE CHANNELS
C      ISF(I) IS THE NUMBER OF TERMS TAKEN IN ASYMPTOTIC
C             SERIES FOR CHANNEL I (SEE EQ.(C6) OF APPENDIX C
C             OF PAPER III).
C      USES INTERNAL SUBROUTINE EXPAN,ITERA,POTS,ZETA,PPFS,QROP,
C                               POP,DCHAIN,PHAS,BOOLE,COULGM
C               AND SUBROUTINES SOLV,WOUTER
C
C ---------------------------------------------------------------------
C
C   CHANGES MADE FROM THE ORIGINAL ASYM -
C   *************************************
C
C    THE SUBROUTINE ASYSM (AND SUBROUTINES CALLED BY IT) DIFFERS
C    FROM ASYM OF NORCROSS (AND SUBROUTINES CALLED BY IT) AS
C    FOLLOWS (SEE APPENDIX C OF PAPER III) -
C         1) MAJOR RECODING TO IMPROVE EFFICIENCY
C         2) INSERTION OF COMMON BLOCKS HOLD AND WORK
C         3) MORE USE OF BLANK COMMON AS WORKING SPACE
C         4) SUBROUTINES VMUL AND FACT CALLED BY ASYM HAVE BEEN DELETED
C         5) THE INPHS OPTION OF ASYM HAS BEEN DELETED
C         6) DIFFERENT METHOD USED FOR CALCULATION OF PHASE
C            OF FUNCTIONS
C
C    NO CHANGES HAVE BEEN MADE IN NUMERICAL METHODS, EXCEPT AS
C    MENTIONED IN SECTION 7.1 AND APPENDIX C(X) OF PAPER III, IN
C    SUBROUTINE PHAS AND COULGM, AND AS DESCRIBED IN SECTION 9.1
C    OF CPC AND ON COMMENT CARDS BELOW
C
C ---------------------------------------------------------------------
C
C    CHANGE IN CRITERIA FOR CALLING ITERA
C    ************************************
C
C    FOR THE CASE OF Z GREATER THAN 0 (POSITIVE IONS) AND WHEN THE
C    CHANNEL ENERGIES LIE IN THE RANGE (0,DELE), WHERE DELE IS SET
C    AS 0.07*Z*Z, IN PREVIOUSLY PUBLISHED VERSIONS OF THE ASYPMTOTIC
C    ROUTINES (I.E. IN THE PROGRAMS ASYM AND IMPACT) BOTH THE ITERA
C    AND EXPAN METHODS OF SOLUTION ARE TRIED. SOLUTIONS ARE USED
C    FROM THE METHOD WHICH GIVE THE VALUE OF RF CLOSEST TO RO (WHICH
C    IS THE VALUE OF R AT WHICH SOLUTIONS ARE REQUIRED). THE PROCEDURE
C    HAS BEEN CHANGED SO THAT EXPAN IS TRIED FIRST, AND IF RFE IS LESS
C    THAN RO*DELNU (WHERE DELNU IS SET EQUAL TO 1.15 IN MAIN) AND IF
C    TAKING THIS VALUE FOR RF IMPLIES THAT SOLV WOULD REQUIRE LESS THAN
C    250 INTEGRATION POINTS TO INTEGRATE FROM RF TO RO, THEN ASYPCK
C    TAKES THE EXPAN SOLUTIONS WITHOUT TRYING THE ITERA METHOD. THIS
C    CAN AVOID UNNECESSARY CALLS TO ITERA AND CONSEQUENTLY CAN LEAD
C    TO A SUBSTANTIAL SAVING OF CPU TIME (WITHOUT AFFECTING THE
C    ACCURACY OF THE SOLUTIONS). FULL DETAILS ARE GIVEN IN SECTION 9
C    OF CPC.
C
C ---------------------------------------------------------------------
C
C  INITIALIZATION
C  --------------
C
      DATA PI,IAS,NIT,ALZ/3.1415926535898D0,15,6,
     A                    1.0D0/
C
      NHY = 10
      RST = 0.0D0
C
C   SETUP IBUG,IOUT,NOP,NZD,NCNL,LAMAX,DELE
C   PUT NZD = INTEGER SZ (ALLOWING FOR POSSIBLE ROUNDING ERRORS)
C
      IBUG = 0
      IF (JBUG.EQ.2) IBUG = 1
      IOUT = MT6
      NOP = NCHOP
      NZD = SZ + 0.5D0
      NCNL = N
      LAMAX = M
      DELE = 0.07D0*SZ*SZ
C
C   SETUP DDR AND RFU
C
      DDR = (R2-R1)/4.0D0
      RFU = RO + 250.0D0*DDR
C
C   WRITE HEADING
C
      IF (IBUG.EQ.1) WRITE (IOUT,3000)
C
C     CHANGE TO KAPPA-RHO UNITS
C     DEFINE UPPER AND LOWER CHANNEL NUMBERS FOR ENERGY DEGENERACY
C
      IF (NZD.NE.0) ALZ = NZD
C
      ALZD = 1.0D0/ALZ
      ALZ2 = ALZD*ALZD
C
      IF (NCHOP.NE.NCNL)
     A   AETN = LOG(2.0D0/EROR)/SQRT(ABS(ET(NCNL)))
C
      DO 30 I = 1,NCNL
        E2(I) = ET(I)*ALZ2
        DO 20 J = 1,NCNL
          AB12 = ALZD
          DO 10 K = 1,LAMAX
            AB12 = AB12*ALZ
            CC(I,J,K) = CN(I,J,K)*AB12
   10     CONTINUE
   20   CONTINUE
   30 CONTINUE
C
      DO 70 J = 1,NCNL
        E2J = E2(J)
        DO 40 I = 1,J
          IF (ABS(ET(I)-ET(J)).NE.0.0D0) GOTO 40
          NDL(J) = I
          GOTO 50
C
   40   CONTINUE
   50   CONTINUE
        DO 60 I = J,NCNL
          IF (ABS(ET(I)-ET(J)).NE.0.0D0) GOTO 70
          NDU(J) = I
   60   CONTINUE
   70 CONTINUE
C
C  SOLUTIONS FOR EACH BOUNDARY CONDITION J
C  ---------------------------------------
C
      DO 360 J = 1,NCNL
C
C   INITIALIZATION
C
        E2J = E2(J)
        ETJ = ET(J)
        IF (IBUG.EQ.1) WRITE (IOUT,3040)
        JJ = J
        RFI = 1.0D8
        RFE = 1.0D8
C
C   TEST FOR CASE OF ZERO ENERGY
C   ============================
C
        IF (E2J.EQ.0.0D0) GOTO 80
C
C   TRY ASYMPTOTIC EXPANSION METHOD
C   ===============================
C
        ZA1 = NZD
        RS = MAX(RO,ABS(2.0D0*ZA1/ETJ))
        IF (ETJ.LT.0.0D0) RS = RO
        CALL EXPAN(IAS,EROR,RS,ISF,RFE,IBUG,IOUT)
C
C   CHECK FOR POSSIBLE USE OF WBK ITERATIVE METHOD
C   ==============================================
C
        IF (NZD.EQ.0) GOTO 130
        IF (J.GT.NOP) GOTO 130
        IF (ETJ.GT.DELE) GOTO 130
        RFT = RO*DELNU
        IF (RFE.LE.RFT .AND. RFE.LT.RFU) GOTO 130
C
C     TRY WBK-ITERATION SOLUTION
C     --------------------------
C     COMPUTE RG, APPROXIMATELY EQUAL TO TWICE VALUE OF R FOR
C     FIRST POINT OF INFLECTION IN COULOMB FUNCTION
C
   80   CONTINUE
        CNJJ = -CN(J,J,1)
        E2CN = E2J*CNJJ
        IF (E2CN.LT.0.01D0) GOTO 90
        RG = (SQRT(1.0D0+E2CN)-1.0D0)
     A     *2.0D0*ALZ/ETJ
        GOTO 100
C
   90   CONTINUE
        RG = CNJJ*ALZD
C
C     DEFINE RS AS LARGER OF RG, R0
C
  100   CONTINUE
        RS = MAX(RO,RG)
        IF (RS.EQ.RST) GOTO 110
C
C     SET UP MESH AND POTENTIAL MATRIX FOR USE IN SUBROUTINE ITERA
C
        HY = 1.0D0/ (DBLE(NHY)*SQRT(RS*ALZ))
        CALL POTS(2*NIT-1)
  110   CONTINUE
        RST = RS
        CALL ITERA(NIT,EROR/10.0,RS,RFI,IBUG,IOUT)
C
C     DETERMINATION OF METHOD BY CRITERION OF SMALLEST RF
C     ---------------------------------------------------
C
        RF = MIN(RFI,RFE)
        IF (RFI.LE.RFE) GOTO 170
C
C     EXPANSION METHOD USED
C     ---------------------
C     COMPUTE AMPLITUDE FACTORS
C
  130   CONTINUE
        RF = RFE
        IF (IBUG.EQ.1) WRITE (IOUT,3020) J
        RHO = RF*ALZ
        IF (J.GT.NOP) GOTO 160
        RZZ = 1.0D0/RHO
        DO 150 I = 1,NCNL
          ISG = ISF(I)
          ISG1 = ISG - 1
          AB11 = GAM1(I,1)
          AB12 = 0.0D0
          AB21 = GAM2(I,1)
          AB22 = 0.0D0
          A1 = 1.0D0
          F1 = 0.0D0
          DO 140 LL = 2,ISG1
            F1 = F1 + RZZ
            A1 = A1*RZZ
            TERM1 = GAM1(I,LL)*A1
            TERM2 = GAM2(I,LL)*A1
            AB11 = AB11 + TERM1
            AB12 = AB12 - TERM1*F1
            AB21 = AB21 + TERM2
            AB22 = AB22 - TERM2*F1
  140     CONTINUE
          F1 = F1 + RZZ
          A1 = A1*RZZ*0.5D0
          TERM1 = GAM1(I,ISG)*A1
          TERM2 = GAM2(I,ISG)*A1
          VF1(I) = AB11 + TERM1
          VF2(I) = AB21 + TERM2
          VFDR1(I) = AB12 - TERM1*F1
          VFDR2(I) = AB22 - TERM2*F1
  150   CONTINUE
  160   CONTINUE
        XKEY = 0.0D0
        EKAP = SQRT(ABS(E2J))
        SGN = NZD
        IF (J.GT.NOP) SGN = -NZD
        Z1 = EKAP + SGN/ (SQRT(ABS(ETJ))*RHO)
        Z2 = 0.0D0
        SQZ = SQRT(EKAP*ALZ)
        GOTO 180
C
C     ITERATION METHOD USED
C     ---------------------
C
  170   CONTINUE
        XKEY = 1.0D0
        IF (IBUG.EQ.1) WRITE (IOUT,3030) J
        SQZ = SQRT(Z1*ALZ)
C
C     WAVE FUNCTIONS AT RF
C     --------------------
C     COMPUTE PHASE (SEE APPENDIX C SECTION (X) OF PAPER III)
C
  180   CONTINUE
        IF (NZD.GT.0) GOTO 190
C
C   CASE OF Z = 0
C
        PH = RF*ALZ*SQRT(ABS(E2J))
        IF (J.GT.NOP) GOTO 240
        PH = PH - EL(J)*PI*0.5D0
        GOTO 220
C
  190   CONTINUE
        IF (E2J.NE.0.0D0) GOTO 200
C
C  CASE OF Z .GT. 0 , K**2 = 0
C
        PH = SQRT(8.0D0*RF*ALZ) - (EL(J)+0.25D0)*PI
        GOTO 220
C
  200   CONTINUE
        IF (E2J.GT.0.0D0) GOTO 210
C
C  CASE OF Z .GT. 0 , K**2 .LT. 0
C
        AG = SQRT(ABS(E2J))
        RH = RF*ALZ*AG
        PH = RH - LOG(RH+RH)/AG
        GOTO 240
C
C  CASE OF Z .GT. 0 , K**2 .GT. 0
C
  210   CONTINUE
        PH = PHAS(RF*ALZ,E2J,XKEY)
        AG = EL(J)
        CALL COULGM(AG,E2J,PI,DG)
        PH = PH + DG
  220   CONTINUE
C
C     COMPLETE COMPUATION OF FUNCTIONS AT RF
C
        SI = SIN(PH)/SQZ
        CO = COS(PH)/SQZ
        DO 230 I = 1,NCNL
          AB11 = VF1(I)
          AB12 = VFDR1(I)
          AB21 = VF2(I)
          AB22 = VFDR2(I)
          WF(I) = SI*AB11 + AB21*CO
          WF1(I) = CO*AB11 - AB21*SI
          TA = AB12 - AB21*Z1 - Z2*AB11
          TB = AB22 + AB11*Z1 - Z2*AB21
          WFD(I) = ALZ* (TA*SI+TB*CO)
          WFD1(I) = ALZ* (TA*CO-TB*SI)
  230   CONTINUE
        GOTO 260
C
  240   CONTINUE
        EXD = EXP(-PH)/SQZ
        AB11 = Z1 + Z2
        DO 250 I = 1,NCNL
          WF(I) = VF1(I)*EXD
          WFD(I) = ((VFDR1(I)*EXD-WF(I)*AB11))*ALZ
  250   CONTINUE
C
C     INTEGRATION FROM RF TO DESIRED R0
C     ---------------------------------
C
  260   CONTINUE
        IF (RF.NE.RO) GOTO 290
        DO 270 I = 1,NCNL
          F(1,I,J) = WF(I)
          FDR(1,I,J) = WFD(I)
  270   CONTINUE
        IF (J.GT.NOP) GOTO 350
        DO 280 I = 1,NCNL
          F(2,I,J) = WF1(I)
          FDR(2,I,J) = WFD1(I)
  280   CONTINUE
        GOTO 350
C
  290   CONTINUE
        NHR = 1 + (RF-RO)/DDR
C
C  CHECK FOR LARGE NUMBER OF INTEGRATION POINTS
C
        IF (DBLE(NHR).LE.EROR*2.5D6) GOTO 300
        WRITE (IOUT,3060) NHR,J
  300   CONTINUE
        IF (NOP.EQ.NCNL) GOTO 310
        IF (J.GT.NOP) GOTO 310
        A1 = RO + AETN
C
C  CHECK FOR LARGE VALUE OF RF
C
        IF (RF.GT.A1) WRITE (IOUT,3070) RF,J
  310   CONTINUE
        HR = (RO-RF)/DBLE(NHR)
        IF (IBUG.EQ.1) WRITE (IOUT,3050) RF,NHR,HR,J
C
C  CALL SOLV FOR INWARD INTEGRATIONS
C
        RA = RF
        CALL SOLV(RA,HR,NHR,WF,WFD)
        DO 320 I = 1,NCNL
          F(1,I,J) = WF(I)
          FDR(1,I,J) = WFD(I)
  320   CONTINUE
        IF (J.GT.NOP) GOTO 330
        RA = RF
        CALL SOLV(RA,HR,NHR,WF1,WFD1)
  330   CONTINUE
        DO 340 I = 1,NCNL
          F(2,I,J) = WF1(I)
          FDR(2,I,J) = WFD1(I)
  340   CONTINUE
C
  350   CONTINUE
        RFST(J) = RF
  360 CONTINUE
C
C  COMPLETES LOOP ON SOLUTIONS FOR DIFFERENT BOUNDARY CONDITIONS
C  -------------------------------------------------------------
C
C  DE-BUG PRINTING
C  ---------------
C
      IF (IBUG.EQ.0) RETURN
      WRITE (IOUT,3120) RO, (I,I=1,NCNL)
      WRITE (IOUT,3100)
      M3 = NCNL
      DO 400 K = 1,2
        M1 = (M3-1)/10 + 1
        DO 390 KK = 1,2
          IF (KK.EQ.2) WRITE (IOUT,3090)
          M2 = 1
          DO 380 I1 = 1,M1
            MCNL = M2 + 9
            IF (MCNL.GT.M3) MCNL = M3
            IF (I1.GT.1) WRITE (IOUT,3080)
            DO 370 I = 1,NCNL
              IF (KK.EQ.1) WRITE (IOUT,3130) (F(K,I,J),J=M2,MCNL)
              IF (KK.EQ.2) WRITE (IOUT,3130) (FDR(K,I,J),J=M2,MCNL)
  370       CONTINUE
            M2 = M2 + 10
  380     CONTINUE
  390   CONTINUE
        IF (K.EQ.2) GOTO 410
        IF (NOP.EQ.0) GOTO 410
        WRITE (IOUT,3110)
        M3 = NOP
  400 CONTINUE
C
  410 CONTINUE
      WRITE (IOUT,3140)
C
 3000 FORMAT (///' *** ASYSM PRINT-OUT WITH IBUG = 2 ***')
 3020 FORMAT (' USED EXPANSION METHOD FOR SOLUTION IN CHANNEL',I3)
 3030 FORMAT (' USED ITERATION METHOD FOR SOLUTION IN CHANNEL',I3)
 3040 FORMAT (//)
 3050 FORMAT (' INTEGRAL FROM RF =',F9.3,' USING A',I6,
     A       ' POINT MESH WITH STEP LENGTH =',F8.5,' IN CHANNEL ',I2)
 3060 FORMAT (' *** WARNING ***  INTEGRATION REQUIRED',I5,
     A       ' POINTS IN CHANNEL ',I3,
     B       ' , RESULTS PRODUCED MAY BE INCORRECT'/17X,
     C' DUE TO INACCURACIES ARISING FROM LARGE NUMBER OF INTEGRATION STE
     DPS')
 3070 FORMAT (/,
     A' *** WARNING ***  POSSIBLE CLOSED CHANNEL INSTABILITY ON INTEGRAT
     BION FROM RF =',F10.5,' IN CHANNEL',I2,/,18X,
     C'(SEE NORCROSS, J.PHYS.B,4,1458,1971 ,  AND  NORCROSS AND SEATON,
     DJ.PHYS.B,6,614,1973 )',/,18X,
     E'USE OF FOX-GOODWIN METHOD IS RECOMMENDED (SEE SECTION 10 OF PAPER
     F III)')
 3080 FORMAT (/)
 3090 FORMAT ('0DERIVATIVES')
 3100 FORMAT ('0REGULAR SOLUTIONS')
 3110 FORMAT ('0IRREGULAR SOLUTIONS')
 3120 FORMAT (//' WAVE FUNCTIONS AT RB =',F12.5,
     A       ' FOR BOUNDARY CONDITIONS',/, (I8,9I12))
 3130 FORMAT (10E12.4)
 3140 FORMAT (/' *** END OF ASYSM PRINT-OUT ***')
      END
CEND********************************************************************
      SUBROUTINE BOOLE(BS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     BOOLES RULE INTEGRATION OF N POINTS ON MESH H
C
C     INTEGRATION FROM ORIGIN TO EACH MESH POINT
C
C     BI IS INPUT ARRAY
C     BO IS OUTPUT ARRAY
C     BS=VALUE OF INTEGRAND AT ORIGIN
C
      COMMON /CMN14/CHN(10),BI(10),BO(10),P1(10),Z1(10)
      COMMON /CMN04/H,N,JJ
C
      H2 = (H+H)/45.0D0
      B1 = BI(1)
      B2 = BI(2)
      B3 = BI(3)
      B4 = BI(4)
      BO(1) = H* (646.0D0*B1-
     A            264.0D0*B2+
     B            106.0D0*B3-
     C             19.0D0*B4+
     D            251.0D0*BS)/720.0D0
      BO(2) = H* (124.0D0*B1+
     A             24.0D0*B2+
     B              4.0D0*B3-
     C                            B4+
     D             29.0D0*BS)/90.0D0
      BO(3) = 3.0D0*H* (
     A       34.0D0*B1+
     B       24.0D0*B2+
     C       14.0D0*B3-
     D                      B4+
     E        9.0D0*BS)/80.0D0
      BO(4) = H2* (7.0D0* (B4+BS)+
     A            32.0D0* (B1+B3)+12.0D0*B2)
      DO 10 J = 5,N
        B5 = BI(J)
        BO(J) = BO(J-4) + H2* (
     A          7.0D0* (B1+B5)+
     B         32.0D0* (B2+B4)+12.0D0*B3)
        B1 = B2
        B2 = B3
        B3 = B4
        B4 = B5
   10 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE BOUNDC
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     (SEE CPC SECTION 7.3)
C
C   BOUNDC CALCULATES RADIAL FUNCTION OUTPUT FOR THE CASE OF
C   ALL CHANNELS CLOSED
C
C   COMPUTES FUNCTIONS AT R(M) = R1 + M*(R2-R1)*0.5     M = 0, (MFG+1)
C   STORES IN FAS(M,L,I), (I=1,NCHF)
C
C   D(I) = SMALL D MATRICES FOR I = 1,NCHF
C
C   FUNCTIONS STORED IN ARRAY FAS DEPENDS ON THE MODE OF CALCULATION
C
C   METH = 0, L = 1 -- FUNCTIONS AT THE CONVERGED ENERGY
C             L = 2 -- FUNCTIONS AT THE INPUT ENERGY
C             L = 3 -- FUNCTIONS AT THE INCREMENTED ENERGY
C   METH = 1, L = 1 -- FUNCTIONS AT THE INPUT ENERGY
C             L = 2 -- NOT USED
C             L = 3 -- NOT USED
C
C   FOR METH = 0 THERE ARE TWO METHODS OF CALCULATION, FOR FG
C   METHOD = 1 OR 2 (SEE SECTION 5.4 OF CPC, COMMENTS IN SUBROUTINES
C   FG AND ASYMPT AND SECTION 10.3(III) OF PAPER III)
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXDUMM=4*MCHF*MCHF-5*MCHF)
      PARAMETER (MXDUM2=MXMATX-5*MCHF-MXDUMM-MXMFG*MCHF*MCHF-
     A          2*MCHF*MCHF)
C
      COMMON /MATRIX/G(MCHF),G11(MCHF),G21(MCHF),G22(MCHF),G12(MCHF),
     A       DUMM(MXDUMM),RFGST(MXMFG,MCHF,MCHF),RRFG(MCHF,MCHF),
     B       RFG(MCHF,MCHF),DUM2(MXDUM2)
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MCHF,MCHF,MLMX),
     A       F1(2,MCHF,MCHF),F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,
     B       DEL1,SZ,R1,R2,R0,RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,
     C       ISOLN,KMETH,IPUNCH,NCHF,NCHOP,NCHCL,LAMMX,IOUT,IBUG,IFILE,
     D       JFILE,KFILE,MFGP1,IALT,JALT,KALT
      COMMON /ABD/A(MCHF,MCHF),B(MCHF,MCHF),D(MCHF)
C
      DIMENSION FAS(MXMFG,4,MCHF)
C
      EQUIVALENCE (FAS(1,1,1),RFGST(1,1,1))
C
C   CALCULATE FOR METH = 1
C   ======================
C
      IF (METH.EQ.0) GOTO 80
C
C   CALCULATE FUNCTIONS AT R1
C
      DO 20 I = 1,NCHF
        A1 = 0.0D0
        DO 10 J = 1,NCHF
          A1 = A1 + D(J)*F1(1,I,J)
   10   CONTINUE
        G(I) = A1
        FAS(1,1,I) = A1
   20 CONTINUE
C
C   CALCULATE AT R(M)
C
      REWIND KFILE
      DO 70 M = 1,MFGP1
        MM = M + 1
        READ (KFILE) RRFG
        DO 30 I = 1,NCHF
          G11(I) = 0.0D0
   30   CONTINUE
        DO 50 I = 1,NCHF
          DO 40 J = 1,NCHF
            G11(J) = G11(J) + RRFG(J,I)*G(I)
   40     CONTINUE
   50   CONTINUE
C
C   PUT SOLUTIONS AT R(M) ONTO G(I)
C
        DO 60 I = 1,NCHF
          FAS(MM,1,I) = G11(I)
          G(I) = G11(I)
   60   CONTINUE
   70 CONTINUE
      KALT = 0
      GOTO 420
C
C   CALCULATION FOR METH = 0
C   ========================
C
C   READ OFF STORED RFG MATRICES FOR INPUT ENERGY
C   =============================================
C
   80 CONTINUE
      REWIND KFILE
      DO 110 M = 1,MFGP1
        MM = M + 1
        READ (KFILE) RRFG
        DO 100 I = 1,NCHF
          DO 90 J = 1,NCHF
            RFGST(MM,I,J) = RRFG(I,J)
   90     CONTINUE
  100   CONTINUE
  110 CONTINUE
C
C   COMPUTE RADIAL FUNCTIONS AT R1
C   ==============================
C   STORE IN G(I) ,I=1,NCHF
C      G11(I) -- FUNCTIONS AT INPUT ENERGY
C      G12(I) -- FUNCTIONS AT INCREMENTED ENERGY
C
      DO 140 I = 1,NCHF
        G11(I) = 0.0D0
        G12(I) = 0.0D0
        DO 120 J = 1,NCHF
          G11(I) = G11(I) + F1(1,I,J)*D(J)
          G12(I) = G12(I) + F1(2,I,J)*D(J)
  120   CONTINUE
        A1 = G11(I)*B1 + G12(I)*B2
        FAS(1,1,I) = A1
        IF (KALT.EQ.0) GOTO 130
        FAS(1,2,I) = G11(I)
        FAS(1,3,I) = G12(I)
  130   G(I) = A1
  140 CONTINUE
C
C   CALCULATE FUNCTIONS AT R(M)
C   ===========================
C
      IF (METHOD.EQ.2) GOTO 290
C
C   METHOD = 1
C   ==========
C
      M1 = 1
  150 CONTINUE
      DO 280 M = M1,MFGP1
        MM = M + 1
C
C   READ OFF RFG AT INCREMENTED ENERGY
C
        READ (KFILE) RFG
C
C   INTERPOLATE RFGS TO OBTAIN RFG AT CONVERGED ENERGY
C
        DO 170 I = 1,NCHF
          DO 160 J = 1,NCHF
            RRFG(I,J) = RFGST(MM,I,J)*B1 + RFG(I,J)*B2
  160     CONTINUE
  170   CONTINUE
C
C   COMPUTE FUNCTIONS AT CONVERGED ENERGY
C
        DO 180 I = 1,NCHF
          DUMM(I) = 0.0D0
  180   CONTINUE
        DO 200 I = 1,NCHF
          DO 190 J = 1,NCHF
            DUMM(J) = DUMM(J) + RRFG(J,I)*G(I)
  190     CONTINUE
  200   CONTINUE
C
C   PUT SOLUTION AT R(M) IN G(I)
C
        DO 210 I = 1,NCHF
          G(I) = DUMM(I)
  210   CONTINUE
C
C   CALCULATE FUNCTIONS AT THE INPUT AND INCREMENTED ENERGIES
C
        IF (KALT.NE.0) GOTO 230
        DO 220 I = 1,NCHF
          FAS(MM,1,I) = G(I)
  220   CONTINUE
        GOTO 280
C
  230   CONTINUE
        DO 240 I = 1,NCHF
          G21(I) = 0.0D0
          G22(I) = 0.0D0
  240   CONTINUE
        DO 260 I = 1,NCHF
          DO 250 J = 1,NCHF
            G21(J) = G21(J) + RFGST(MM,J,I)*G11(I)
            G22(J) = G22(J) + RFG(J,I)*G12(I)
  250     CONTINUE
  260   CONTINUE
        DO 270 I = 1,NCHF
          FAS(MM,1,I) = G(I)
          FAS(MM,2,I) = G21(I)
          FAS(MM,3,I) = G22(I)
          G11(I) = G21(I)
          G12(I) = G22(I)
  270   CONTINUE
  280 CONTINUE
      GOTO 420
C
C   METHOD = 2
C   ==========
C
  290 CONTINUE
      R = R1
      C1 = SZ + SZ
C
C   COMPUTE ARRAY G(J)=LL(J)*(LL(J)+1)
C
      DO 300 J = 1,NCHF
        A1 = EL(J)
        G(J) = A1* (A1+1.0D0)
  300 CONTINUE
C
      DO 410 M = 1,MFGP1
        MM = M + 1
C
C   READ RFG MATRICES AT INCREMENTED ENERGY
C
        READ (KFILE) RRFG
C
C   COMPUTE R(M)
C
        R = R + DR
C
C   COMPUTE FUNCTIONS AT R(M)
C      G21(I) = FUNCTIONS AT INPUT ENERGY
C      G22(I) = FUNCTIONS AT INCREMENTED ENERGY
C
        DO 330 J = 1,NCHF
          A1 = 0.0D0
          A2 = 0.0D0
          DO 310 K = 1,NCHF
            A1 = A1 + RFGST(MM,J,K)*G11(K)
            A2 = A2 + RRFG(J,K)*G12(K)
  310     CONTINUE
          IF (KALT.EQ.0) GOTO 320
          FAS(MM,2,J) = A1
          FAS(MM,3,J) = A2
  320     CONTINUE
          G21(J) = A1
          G22(J) = A2
  330   CONTINUE
C
C   INTERPOLATE FUNCTIONS TO OBTAIN FUNCTIONS AT CONVERGED ENERGY
C
        DO 340 J = 1,NCHF
          FAS(MM,1,J) = G21(J)*B1 + G22(J)*B2
  340   CONTINUE
C
C   CHECK METHOD
C   ============
C
        IF (M.EQ.MFGP1) GOTO 420
        A1 = 1.0D0/R
        A2 = A1*A1
        A1 = C1*A1
        METHOD = 1
        DO 360 J = 1,NCHF
          IF (KJ(J).EQ.1) GOTO 360
          WJ = A1 - G(J)*A2 + ET(J)
          IF (WJ.LT.0.0D0) GOTO 350
          METHOD = 2
          GOTO 360
C
  350     CONTINUE
          KJ(J) = 1
  360   CONTINUE
        IF (METHOD.EQ.2) GOTO 390
C
C   CHANGE TO METHOD = 1
C
        M1 = M + 1
        DO 370 J = 1,NCHF
          G(J) = FAS(MM,1,J)
  370   CONTINUE
        IF (KALT.EQ.0) GOTO 150
        DO 380 J = 1,NCHF
          G11(J) = G21(J)
          G12(J) = G22(J)
  380   CONTINUE
        GOTO 150
C
C   CONTINUE WITH METHOD = 2
C
  390   CONTINUE
        DO 400 J = 1,NCHF
          G11(J) = G21(J)
          G12(J) = G22(J)
  400   CONTINUE
  410 CONTINUE
C
C   WRITE FUNCTIONS ONTO JFILE
C   ==========================
C
  420 CONTINUE
      MFGP1 = MFGP1 + 1
      DO 430 I = 1,NCHF
        WRITE (JFILE,3030) (FAS(M,1,I),M=1,MFGP1)
  430 CONTINUE
      IF (IBUG.NE.2) GOTO 450
      IF (METH.EQ.0) WRITE (IOUT,3000)
      IF (METH.EQ.1) WRITE (IOUT,3010)
      DO 440 I = 1,NCHF
        WRITE (IOUT,3030) (FAS(M,1,I),M=1,MFGP1)
  440 CONTINUE
  450 CONTINUE
      IF (KALT.EQ.0) RETURN
      DO 460 I = 1,NCHF
        WRITE (JFILE,3030) (FAS(M,2,I),M=1,MFGP1)
  460 CONTINUE
      DO 470 I = 1,NCHF
        WRITE (JFILE,3030) (FAS(M,3,I),M=1,MFGP1)
  470 CONTINUE
      IF (IBUG.NE.2) RETURN
      WRITE (IOUT,3010)
      DO 480 I = 1,NCHF
        WRITE (IOUT,3030) (FAS(M,2,I),M=1,MFGP1)
  480 CONTINUE
      WRITE (IOUT,3020)
      DO 490 I = 1,NCHF
        WRITE (IOUT,3030) (FAS(M,3,I),M=1,MFGP1)
  490 CONTINUE
C
 3000 FORMAT (/,'  RADIAL FUNCTIONS AT CONVERGED ENERGY')
 3010 FORMAT (/,'  RADIAL FUNCTIONS AT INPUT ENERGY')
 3020 FORMAT (/,'  RADIAL FUNCTIONS AT INCREMENTED ENERGY')
 3030 FORMAT (5E16.9)
      END
CEND********************************************************************
      SUBROUTINE COULGM(AG,E2,PI,DG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     SEE APPENDIX C SECTION (X) OF PAPER III
C
C    AG = L(J) ANGULAR MOMENTUM OF CHANNEL J
C    E2 = SCALED ENERGY (K**2)/(Z**2)
C    PI = 3.1415926
C
C    USED ONLY FOR Z .GT. 0 AND E2 .GT. 0
C
C    CALCULATES DG AS DEFINED BY EQUATIONS (C24) AND (C30)
C    EQUATION NUMBERS REFER TO PAPER III
C
      L = INT(AG)
      B = 1.0D0/SQRT(E2)
C
C    INITIALISE P = L+1  ,EQUATION (C29)
C
      IP = L + 1
      A = DBLE(IP)
C
C    INITIALISE DG TO MULTIPLE OF PI
C
      DG = - (AG+0.25D0)*PI
C
C    SET UP CONDITION (C29)
C
      L1 = IP
      A1 = 1.0D0/3.0D0
      A1 = 25.0D0* (B**A1) - B*B
C
C    CHECK FOR LARGE ENOUGH VALUE OF P  (C29)
C
      IF (A1.LE.0.0D0) GOTO 20
   10 CONTINUE
      A2 = A*A
      IF (A2.GT.A1) GOTO 20
C
C    INCREMENT P BY 1
C
      IP = IP + 1
      A = A + 1.0D0
      GOTO 10
C
C    ADD ON TERMS TO OBTAIN DG AS DEFINED BY EQUATION (C30)
C
   20 CONTINUE
      A1 = A/B
      A2 = A1*A1
      A3 = A2 + 1.0D0
      A4 = B*A3
      DG = DG - B*0.5D0*LOG(A3) +
     A     (A-0.5D0)*ATAN(A1) + 1.0D0/
     B     (12.0D0*A4)
     A     + (1.0D0-3.0D0*A2)/
     D     (360.0D0*A4*A4*A4)
C
C    ADD ON TERMS OF EQUATION (C31) TO DG
C    (NOTING THAT CORRECT MULTIPLE OF PI HAS BEEN ACCOUNTED FOR ABOVE)
C
      IF (IP.EQ.L1) RETURN
      L2 = IP - 1
      DO 30 I = L1,L2
        A = DBLE(I)/B
        DG = DG - ATAN(A)
   30 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE DCHAIN(CHN,I,NP,NV,NAB,ND,C1,N1,C2,N2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     CHAIN RULE DERIVATIVE OF GENERAL EXPRESSION
C
C     I=POSITION IN VECTOR ARRAYS
C     NP=OVERALL DERIVATIVE NP-1, MUST BE G.E.1
C     NV=DERIVATE NV-1 OF POTENTIAL MATRIX
C     NV=0 IMPLIES SUBSTITUTE DELTA(I,K) FOR POTENTIAL MATRIX DERIVATIVE
C     NAB=1 FOR A VECTOR, =2 FOR B VECTOR
C     ND=DERIVATIVE ND-1 OF AB VECTOR, MUST BE G.E.1
C     C1=SCALAR FUNCTION C1(J)
C     C2=SCALAR FUNCTION C2(J)
C     ARRAY CHN OUTPUTS RESULT AT EACH MESH POINT
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,MCHF,15),DUM1(1,1,1),DUM2(MXDUM2)
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN04/HY,NHY,JJ
C
      DIMENSION BLP(13),D1(12),D2(12),NJ(MCHF)
      DIMENSION C1(12,10),C2(12,10),CHN(10)
C
      NU = NP
      K = NU - 1
      IF (K.EQ.0) K = 1
      IF (NV.NE.0) GOTO 40
      IF (N1.NE.0) GOTO 310
      IF (N2.NE.0) GOTO 240
      R = ALP(1,K)
      IND = NU + ND - 1
      IF (NAB.GT.1) GOTO 20
      DO 10 IPT = 1,NHY
        CHN(IPT) = AB1(I,IND,IPT)*R
   10 CONTINUE
      RETURN
C
   20 CONTINUE
      DO 30 IPT = 1,NHY
        CHN(IPT) = AB2(I,IND,IPT)*R
   30 CONTINUE
      RETURN
C
   40 CONTINUE
      DO 50 KVD = I,NCNL
        NJ(KVD) = I + (KVD*KVD-KVD)/2
   50 CONTINUE
      IF (I.EQ.1) GOTO 70
      I2 = I - 1
      I1 = (I*I2)/2
      DO 60 KVD = 1,I2
        NJ(KVD) = KVD + I1
   60 CONTINUE
C
   70 CONTINUE
      DO 80 KP = 1,NU
        BLP(KP) = ALP(KP,K)
   80 CONTINUE
      ND1 = ND - 1
      NUP1 = NU + 1
      IF (NAB.GT.1) GOTO 150
      DO 140 IPT = 1,NHY
        DUM = 0.0D0
        IN1 = 0
        NU1 = NUP1
        DO 120 KP = 1,NU
          INV = NU1
          NU1 = NU1 - 1
          K1 = NU1 - 1
          IF (K1.EQ.0) K1 = 1
          CHA1 = 0.0D0
          IND = ND1
          DO 100 KQ1 = 1,NU1
            INV = INV - 1
            IND = IND + 1
            S = 0.0D0
            DO 90 KD = 1,NCNL
              IJ = NJ(KD)
              S = S + V(IJ,INV,IPT)*AB1(KD,IND,IPT)
   90       CONTINUE
            CHA1 = CHA1 + S*ALP(KQ1,K1)
  100     CONTINUE
          IF (N1.NE.0) GOTO 110
          DUM = BLP(1)*CHA1
          GOTO 130
C
  110     CONTINUE
          IN1 = IN1 + 1
          CHA2 = C1(IN1,IPT)
          DUM = DUM + BLP(KP)*CHA1*CHA2
  120   CONTINUE
  130   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  140 CONTINUE
      RETURN
C
  150 CONTINUE
      DO 210 IPT = 1,NHY
        DUM = 0.0D0
        IN1 = 0
        NU1 = NUP1
        DO 190 KP = 1,NU
          INV = NU1
          NU1 = NU1 - 1
          K1 = NU1 - 1
          IF (K1.EQ.0) K1 = 1
          CHA1 = 0.0D0
          IND = ND1
          DO 170 KQ1 = 1,NU1
            INV = INV - 1
            IND = IND + 1
            S = 0.0D0
            DO 160 KD = 1,NCNL
              IJ = NJ(KD)
              S = S + V(IJ,INV,IPT)*AB2(KD,IND,IPT)
  160       CONTINUE
            CHA1 = CHA1 + S*ALP(KQ1,K1)
  170     CONTINUE
          IF (N1.NE.0) GOTO 180
          DUM = BLP(1)*CHA1
          GOTO 200
C
  180     CONTINUE
          IN1 = IN1 + 1
          CHA2 = C1(IN1,IPT)
          DUM = DUM + BLP(KP)*CHA1*CHA2
  190   CONTINUE
  200   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  210 CONTINUE
      RETURN
C
  220 CONTINUE
      DO 230 IPT = 1,NHY
        CHN(IPT) = 0.0D0
  230 CONTINUE
      RETURN
C
  240 CONTINUE
      DO 250 KP = 1,NU
        BLP(KP) = ALP(KP,K)
  250 CONTINUE
      NUD = NU + ND
      IF (NAB.EQ.2) GOTO 280
      DO 270 IPT = 1,NHY
        DUM = 0.0D0
        IN2 = 0
        IND = NUD
        DO 260 KP = 1,NU
          IN2 = IN2 + 1
          IND = IND - 1
          DUM = DUM + AB1(I,IND,IPT)*C2(IN2,IPT)*BLP(KP)
  260   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  270 CONTINUE
      RETURN
C
  280 CONTINUE
      DO 300 IPT = 1,NHY
        DUM = 0.0D0
        IND = NUD
        IN2 = 0
        DO 290 KP = 1,NU
          IN2 = IN2 + 1
          IND = IND - 1
          DUM = DUM + AB2(I,IND,IPT)*C2(IN2,IPT)*BLP(KP)
  290   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  300 CONTINUE
      RETURN
C
  310 CONTINUE
      DO 320 KP = 1,NU
        BLP(KP) = ALP(KP,K)
  320 CONTINUE
      NUD = NU + ND
      N21 = N2 - 1
      IF (NAB.EQ.2) GOTO 370
      DO 360 IPT = 1,NHY
        DO 330 I1 = 1,12
          D1(I1) = C1(I1,IPT)
          D2(I1) = C2(I1,IPT)
  330   CONTINUE
        DUM = 0.0D0
        IND = NUD
        DO 350 KP = 1,NU
          NU2 = KP
          K2 = NU2 - 1
          IF (K2.EQ.0) K2 = 1
          IN1 = NU2 + N1
          IN2 = N21
          CHA2 = 0.0D0
          DO 340 KQ2 = 1,NU2
            IN1 = IN1 - 1
            IN2 = IN2 + 1
            CHA2 = CHA2 + ALP(KQ2,K2)*D1(IN1)*D2(IN2)
  340     CONTINUE
          IND = IND - 1
          DUM = DUM + BLP(KP)*CHA2*AB1(I,IND,IPT)
  350   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  360 CONTINUE
      RETURN
C
  370 CONTINUE
      DO 410 IPT = 1,NHY
        DO 380 I1 = 1,12
          D1(I1) = C1(I1,IPT)
          D2(I1) = C2(I1,IPT)
  380   CONTINUE
        DUM = 0.0D0
        IND = NUD
        DO 400 KP = 1,NU
          NU2 = KP
          K2 = NU2 - 1
          IF (K2.EQ.0) K2 = 1
          CHA2 = 0.0D0
          IN1 = NU2 + N1
          IN2 = N21
          DO 390 KQ2 = 1,NU2
            IN1 = IN1 - 1
            IN2 = IN2 + 1
            CHA2 = CHA2 + ALP(KQ2,K2)*D1(IN1)*D2(IN2)
  390     CONTINUE
          IND = IND - 1
          DUM = DUM + BLP(KP)*CHA2*AB2(I,IND,IPT)
  400   CONTINUE
        IF (DUM.EQ.0.0D0) GOTO 220
        CHN(IPT) = DUM
  410 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE EXPAN(IAS,EROR,RO,ISF,RF,IBUG,IOUT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     PHASE FROM DIAGONAL CHANNEL AND AMPLITUDE BY ASYMPTOTIC EXPANSION
C
C     IAS=MAXIMUM NUMBER OF TERMS IN EXPANSION
C     EROR=MAXIMUM VALUE OF LAST TERM IN EXPANSION
C     RO=DESIRED VALUE OF R
C     ISF,IAS OR POINT WHERE EXPANSION DIVERGES
C     RF=MINIMUM VALUE OF R FOR WHICH EXPANSION VALID FOR GIVEN ERROR
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-4*MCHF-1)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MCHF,MCHF,MLMX),E2(MCHF),
     B       PP(12,10),T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM1(MCHF,15),GAM2(MCHF,15),VF1(MCHF),VF2(MCHF),
     D       VFDR1(MCHF),VFDR2(MCHF),DUM(MXDUM),DUM1(1,1,1)
C
      DIMENSION ISF(MCHF)
C
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
      COMMON /CMN04/HY,NHY,JJ
C
      NDLJJ = NDL(JJ)
      NDUJJ = NDU(JJ)
      E2JJ = E2(JJ)
      EKAP = SQRT(ABS(E2JJ))
      RA = RO
      IF (NZD.EQ.0) GOTO 10
      ALZ = NZD
      ETA = 1.0D0/EKAP
      A5 = ETA*ETA
      ETA2 = A5*0.5D0
      GOTO 20
C
   10 CONTINUE
      ALZ = 1.0D0
      ETA = 0.0D0
      A5 = 0.0D0
      ETA2 = 0.0D0
   20 CONTINUE
      RP1S = RO*ALZ
      RP2S = 1.0D8*ALZ
      EKAP2 = EKAP + EKAP
      IF (JJ.GT.NOP) GOTO 170
C
C   OPEN CHANNELS FOR Z GREATER THAN OR EQUAL TO ZERO
C
      DO 30 J = 1,NCNL
        GAM1(J,1) = 0.0D0
        GAM1(J,2) = 0.0D0
        GAM2(J,1) = 0.0D0
   30 CONTINUE
      GAM1(JJ,1) = 1.0D0
      GAM1(JJ,2) = -ETA2
C
      DO 50 J = 1,NCNL
        G3 = 0.0D0
        IF (J.LT.NDLJJ) GOTO 40
        IF (J.GT.NDUJJ) GOTO 40
        G3 = -CC(J,JJ,1)*0.5D0/EKAP
        IF (J.NE.JJ) GOTO 40
        G3 = G3 + ETA2/EKAP
   40   GAM2(J,2) = G3
   50 CONTINUE
C
      A2 = 0.0D0
      A3 = A5
      A6 = ETA
      ETA2 = ETA + ETA
      M1 = 1
      M3 = 0
      DO 120 I = 3,IAS
        A4 = A3
        A5 = A6
        M2 = M1
        M1 = M1 + 1
        M3 = M3 + 2
        A1 = 1.0D0/ (DBLE(M1+M1)*EKAP)
        A2 = A2 + EKAP2
        A3 = A3 - M3
        A6 = A6 + ETA2
        MDG = MIN(M1,LAMAX)
        MNDG = MIN(M2,LAMAX)
        DO 110 J = 1,NCNL
          G1 = GAM1(J,M1)
          G2 = GAM2(J,M1)
          IF (J.LT.NDLJJ) GOTO 80
          IF (J.GT.NDUJJ) GOTO 80
C
C DEGENERATE ENERGIES
C
          DUMA = A3*G2 + A6*G1
          DUMB = A3*G1 - A6*G2
          DO 70 L = 1,NCNL
            IMIN = I
            DO 60 M = 1,MDG
              IMIN = IMIN - 1
              G3 = CC(J,L,M)
              DUMA = DUMA - G3*GAM2(L,IMIN)
              DUMB = DUMB - G3*GAM1(L,IMIN)
   60       CONTINUE
   70     CONTINUE
          GAM1(J,I) = -DUMA*A1
          GAM2(J,I) = DUMB*A1
          GOTO 110
C
C   NON-DEGENERATE ENERGIES
C
   80     CONTINUE
          G3 = GAM1(J,M2)
          G4 = GAM2(J,M2)
          DUMA = A4*G3 - A5*G4 - A2*G2
          DUMB = A4*G4 + A5*G3 + A2*G1
          DO 100 L = 1,NCNL
            IMIN = M1
            DO 90 M = 1,MNDG
              IMIN = IMIN - 1
              G3 = CC(J,L,M)
              DUMA = DUMA - G3*GAM1(L,IMIN)
              DUMB = DUMB - G3*GAM2(L,IMIN)
   90       CONTINUE
  100     CONTINUE
          G3 = 1.0D0/ (E2(J)-E2JJ)
          GAM1(J,I) = DUMA*G3
          GAM2(J,I) = DUMB*G3
  110   CONTINUE
  120 CONTINUE
C
      DO 160 J = 1,NCNL
        RP1 = RP1S
        RP2 = RP2S
        DO 130 I = 4,IAS
          IT = I - 1
          ASM = MAX(ABS(GAM1(J,I)),ABS(GAM2(J,I)))
          IF (ASM.LT.0.1D0) GOTO 130
          RP1 = (ASM/EROR)** (1.0D0/DBLE(IT))
          IF (RP1.GT.RP2) GOTO 140
          RP2 = RP1
  130   CONTINUE
        ISF(J) = IAS
        RF = RP1/ALZ
        GOTO 150
C
  140   CONTINUE
        ISF(J) = IT
        RF = RP2/ALZ
  150   CONTINUE
        RA = MAX(RF,RA)
  160 CONTINUE
      GOTO 340
C
C    CLOSED CHANNELS
C
  170 CONTINUE
      DO 180 J = 1,NCNL
        GAM1(J,1) = 0.0D0
  180 CONTINUE
      GAM1(JJ,1) = 1.0D0
C
      DO 200 J = 1,NCNL
        G3 = 0.0D0
        IF (J.LT.NDLJJ) GOTO 190
        IF (J.GT.NDUJJ) GOTO 190
        G3 = -CC(J,JJ,1)*0.5D0/EKAP
        IF (J.NE.JJ) GOTO 190
        G3 = G3 + (ETA*0.5D0-ETA2)/EKAP
  190   GAM1(J,2) = G3
  200 CONTINUE
      ETAP2 = ETA + ETA
C
      M1 = 1
      A2 = 0.0D0
      M3 = 0
      A6 = ETA - A5
      DO 270 I = 3,IAS
        M2 = M1
        A5 = A6
        M1 = M1 + 1
        M3 = M3 + 2
        A1 = 1.0D0/ (DBLE(M1+M1)*EKAP)
        A6 = A6 + ETAP2 - M3
        A2 = A2 - EKAP2
        MDG = MIN(M1,LAMAX)
        MNDG = MIN(M1-1,LAMAX)
        DO 260 J = 1,NCNL
          IF (J.LT.NDLJJ) GOTO 230
          IF (J.GT.NDUJJ) GOTO 230
C
C   TERMS WITH DEGENERATE ENERGIES
C
          DUMA = GAM1(J,M1)*A6
          DO 220 L = 1,NCNL
            IMIN = I
            DO 210 M = 1,MDG
              IMIN = IMIN - 1
              DUMA = DUMA - CC(J,L,M)*GAM1(L,IMIN)
  210       CONTINUE
  220     CONTINUE
          GAM1(J,I) = A1*DUMA
          GOTO 260
C
C   TERMS WITH NON-DEGENERETE ENERGIES
C
  230     CONTINUE
          DUMA = A2*GAM1(J,M1) + A5*GAM1(J,M2)
          DO 250 L = 1,NCNL
            IMIN = M1
            DO 240 M = 1,MNDG
              IMIN = IMIN - 1
              DUMA = DUMA - CC(J,L,M)*GAM1(L,IMIN)
  240       CONTINUE
  250     CONTINUE
          GAM1(J,I) = DUMA/ (E2(J)-E2JJ)
  260   CONTINUE
  270 CONTINUE
C
      DO 310 J = 1,NCNL
        RP1 = RP1S
        RP2 = RP2S
        DO 280 I = 4,IAS
          IT = I - 1
          ASM = ABS(GAM1(J,I))
          IF (ASM.LT.0.1D0) GOTO 280
          RP1 = (ASM/EROR)** (1.0D0/DBLE(IT))
          IF (RP1.GT.RP2) GOTO 290
          RP2 = RP1
  280   CONTINUE
        ISF(J) = IAS
        RF = RP1/ALZ
        GOTO 300
C
  290   CONTINUE
        ISF(J) = IT
        RF = RP2/ALZ
  300   CONTINUE
        RA = MAX(RF,RA)
  310 CONTINUE
C
C  CALCULATE AMPLITUDE PARAMETERS IN CLOSED CHANNEL CASE
C
      RHO = RA*ALZ
      RZZ = 1.0D0/RHO
      DO 330 I = 1,NCNL
        ISG = ISF(I)
        ISG1 = ISG - 1
        A4 = GAM1(I,1)
        A5 = 0.0D0
        A1 = 1.0D0
        A2 = 0.0D0
        DO 320 LL = 2,ISG1
          A1 = A1*RZZ
          A2 = A2 + RZZ
          A3 = GAM1(I,LL)*A1
          A4 = A4 + A3
          A5 = A5 - A3*A2
  320   CONTINUE
        A1 = A1*RZZ*0.5D0
        A2 = A2 + RZZ
        A3 = GAM1(I,ISG)*A1
        VF1(I) = A4 + A3
        VFDR1(I) = A5 - A3*A2
  330 CONTINUE
C
  340 CONTINUE
      RF = RA
      IF (IBUG.EQ.1) WRITE (IOUT,3000) JJ,RF, (ISF(I),I=1,NCNL)
C
 3000 FORMAT (' TRIED EXPANSION METHOD IN CHANNEL',I3,
     A       ', CONVERGENCE AT RFE = ',E12.5,/,' ISF(I) =',(20I5))
      END
CEND********************************************************************
      SUBROUTINE FG
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     (SEE CPC SECTION 5.3 AND SECTION 10.3 OF PAPER III)
C
C  FOR MFG NON-ZERO, ASYMPTOTIC POINTS HAVE BEEN REDEFINED AS
C        RA = R1 + MFG * DR
C        RB = RA + DR        WHERE DR=0.5*(R2-R1)
C  ASYSM IS USED TO CALCULATE FUNCTIONS AT RA AND RB. FOX-GOODWIN
C  TECHNIQUE IS USED TO INTEGRATE FROM RA,RB TO R1,R2
C
C  REFERENCE - NORCROSS AND SEATON, J. PHYS. B.,6,614,1973
C  COMMENTS REFER TO THEIR NOTATION -
C  P AND Q ARE DEFINED BY THEIR EQN. (3.16).  RFG IS MATRIX R IN THEIR
C  EQN. (3.7) AND SR IS MATRIX SCRIPT R IN THEIR EQN. (3.11).
C  EQUATION NUMBERS REFER TO NORCROSS AND SEATON UNLESS OTHERWISE
C  STATED
C
C  THE TECHNIQUE DIVIDES INTO THREE PARTS
C  PART A -- CALCULATION OF THE R AND SCRIPT R MATRICES (EQUATIONS
C            3.7 AND 3.11 OF NORCROSS AND SEATON PAPER)
C  PART B -- CALCULATION OF THE SOLUTIONS AT R1
C  PART C -- CALCULATION OF THE SOLUTIONS AT R2
C
C  INTEGRATION IS PERFORMED IN A DO LOOP ON K CASES (K = 1, KMETH).
C  FOR THE CASE OF SOME CHANNELS OPEN
C  K = 1, INTEGRATION OF THE SIN AND DEACYING SOLUTIONS
C  K = 2, INTEGRATION OF THE COS SOLUTIONS
C  FOR THE CASE OF ALL CHANNELS CLOSED
C  K = 1, INTEGRATION OF THE DECAYING SOLUTIONS AT THE INPUT ENERGY
C  K = 2 (FOR METH = 0 ONLY), INTEGRATION OF THE SOLUTIONS AT THE
C         INCREMENTED ENERGY
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXDUM=MXMATX-5*MCHF*MCHF-MXMFG*MCHF*MCHF-MCHF)
C
      COMMON /MATRIX/RFG(MCHF,MCHF),RFGP(MCHF,MCHF),SR(MCHF,MCHF),
     A       DD(MCHF,MCHF),RFGST(MXMFG,MCHF,MCHF),RRFG(MCHF,MCHF),
     B       X(MCHF),DUM(MXDUM)
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MXBLAM),F1(2,MCHF,MCHF),
     A       F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,R0,
     B       RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,IPUNCH,
     C       NCHF,NCHOP,NCHCL,LAMMX,IOUT,IBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
C
      DIMENSION W1(MCHF,MCHF),W2(MCHF,MCHF),A(MCHF,MCHF)
C
      CFG = 12.0D0/ (DR*DR)
      MFGP1 = MFG + 1
C
C   FOR THE CASE OF SOME (BUT NOT ALL) CHANNELS OPEN, INCLUDE THE
C   CLOSED CHANNEL SOLUTIONS IN THE IRREGULAR SOLUTIONS
C
      IF (NCHOP.EQ.0 .OR. NCHCL.EQ.0) GOTO 30
      M = NCHOP + 1
      DO 20 I = 1,NCHF
        DO 10 J = M,NCHF
          F1(2,I,J) = F1(1,I,J)
          F2(2,I,J) = F2(1,I,J)
   10   CONTINUE
   20 CONTINUE
C
C   BEGIN DO LOOP ON K CASES
C   ========================
C
   30 CONTINUE
      DO 980 K = 1,KMETH
C
C   INCREMENT ENERGIES FOR THE CASE OF ALL CHANNELS CLOSED AND METH = 0
C
        IF (K.EQ.1) GOTO 50
        IF (NCHOP.GT.0) GOTO 50
        DO 40 I = 1,NCHF
          ET(I) = ET(I) + DEL1
   40   CONTINUE
C
C   PART A -- CALCULATE ALL RFG AND SR MATRICES
C   ======
C
C   INITIALISE RFG AND SR
C
   50   CONTINUE
        DO 70 I = 1,NCHF
          DO 60 J = 1,NCHF
            A(I,J) = F1(K,I,J)
   60     CONTINUE
   70   CONTINUE
        CALL MTINV(A,NCHF)
        DO 100 I = 1,NCHF
          DO 90 J = 1,NCHF
            A1 = 0.0D0
            DO 80 IP = 1,NCHF
              A1 = A1 + F2(K,I,IP)*A(IP,J)
   80       CONTINUE
            SR(I,J) = A1
            RFG(I,J) = A1
   90     CONTINUE
  100   CONTINUE
C
C   STORE RFG IF IPUNCH = 1
C
        IF (IPUNCH.EQ.0) GOTO 130
        MST = MFGP1
        DO 120 I = 1,NCHF
          DO 110 J = 1,NCHF
            RFGST(MST,I,J) = RFG(I,J)
  110     CONTINUE
  120   CONTINUE
C
C   INITIALISE W
C
  130   CONTINUE
        CALL WW(W1,RA)
        CALL WW(W2,RB)
C
C   GENERATE RFG AND SR
C   -------------------
C
        DO 360 IS = 1,MFG
C
C   IF IS = MFG, STORE OLD RFG AS RFGP
C  (RFGP = RFG(2) OF EQ.(10.9) OF PAPER III)
C
          IF (IS.NE.MFG) GOTO 160
          DO 150 I = 1,NCHF
            DO 140 J = 1,NCHF
              RFGP(I,J) = RFG(I,J)
  140       CONTINUE
  150     CONTINUE
C
  160     CONTINUE
          DO 200 I = 1,NCHF
            DO 170 J = 1,NCHF
              A(I,J) = -10.0D0*W1(I,J) - CFG*RFG(I,J)
  170       CONTINUE
            A(I,I) = A(I,I) + 2.0D0*CFG
            DO 190 IP = 1,NCHF
              DO 180 J = 1,NCHF
                A(I,J) = A(I,J) - W2(I,IP)*RFG(IP,J)
  180         CONTINUE
  190       CONTINUE
  200     CONTINUE
          CALL MTINV(A,NCHF)
C
C   COMPUTE NEW W1 AND W2
C
          DO 220 I = 1,NCHF
            DO 210 J = 1,NCHF
              W2(I,J) = W1(I,J)
  210       CONTINUE
  220     CONTINUE
          RA = RA - DR
          CALL WW(W1,RA)
C
C   COMPUTE NEW RFG
C
          DO 260 I = 1,NCHF
            DO 230 J = 1,NCHF
              RFG(I,J) = A(I,J)*CFG
  230       CONTINUE
            DO 250 IP = 1,NCHF
              DO 240 J = 1,NCHF
                RFG(I,J) = RFG(I,J) + A(I,IP)*W1(IP,J)
  240         CONTINUE
  250       CONTINUE
  260     CONTINUE
C
C   STORE RFG IF IPUNCH = 1
C
          IF (IPUNCH.EQ.0) GOTO 290
          MST = MST - 1
          DO 280 I = 1,NCHF
            DO 270 J = 1,NCHF
              RFGST(MST,I,J) = RFG(I,J)
  270       CONTINUE
  280     CONTINUE
C
C   COMPUTE NEW SR
C
  290     CONTINUE
          DO 330 I = 1,NCHF
            DO 300 J = 1,NCHF
              DD(I,J) = 0.0D0
  300       CONTINUE
            DO 320 IP = 1,NCHF
              DO 310 J = 1,NCHF
                DD(I,J) = DD(I,J) + SR(I,IP)*RFG(IP,J)
  310         CONTINUE
  320       CONTINUE
  330     CONTINUE
          DO 350 I = 1,NCHF
            DO 340 J = 1,NCHF
              SR(I,J) = DD(I,J)
  340       CONTINUE
  350     CONTINUE
C
  360   CONTINUE
C
C   ALL R AND SR MATRICES NOW CALCULATED
C   ------------------------------------
C
C   PART B -- CALCULATE SOLUTIONS AT R1
C   ======
C
C   INITIALISE F1 TO THE UNIT MATRIX
C
        DO 380 I = 1,NCHF
          DO 370 J = 1,NCHF
            A1 = 0.0D0
            IF (I.EQ.J) A1 = 1.0D0
            F1(K,I,J) = A1
  370     CONTINUE
  380   CONTINUE
C
C   SOME CHANNELS OPEN
C   ------------------
C
        IF (NCHOP.EQ.0) GOTO 620
C
C   CALCULATE Q OPERATOR FOR CLOSED CHANNELS (EQ.(3.16)) AND STORE IN W1
C
        IF (NCHCL.EQ.0) GOTO 440
        DO 400 I = 1,NCHCL
          DO 390 J = 1,NCHCL
            A(I,J) = F2(K,I+NCHOP,J+NCHOP)
  390     CONTINUE
  400   CONTINUE
        CALL MTINV(A,NCHCL)
        DO 430 I = 1,NCHOP
          DO 420 J = 1,NCHCL
            A1 = 0.0D0
            DO 410 IP = 1,NCHCL
              A1 = A1 + F2(K,I,IP+NCHOP)*A(IP,J)
  410       CONTINUE
            W1(I,J) = A1
  420     CONTINUE
  430   CONTINUE
C
C   CALCULATE P OPERATOR FOR OPEN CHANNELS (EQ.(3.16)) AND STORE IN A
C
  440   CONTINUE
        DO 480 I = 1,NCHOP
          DO 470 J = 1,NCHOP
            A1 = -SR(I,J)
            IF (NCHCL.EQ.0) GOTO 460
            DO 450 IP = 1,NCHCL
              A1 = A1 + W1(I,IP)*SR(IP+NCHOP,J)
  450       CONTINUE
  460       A(I,J) = -A1
  470     CONTINUE
  480   CONTINUE
        CALL MTINV(A,NCHOP)
C
C   COMPUTE OPEN-OPEN ELEMENTS OF F1 (LINE 1 OF EQ.(3.15))
C   CALCULATE W2 = F(OPEN-OPEN) - Q*F(CLOSED-OPEN)
C
        DO 520 I = 1,NCHOP
          DO 510 J = 1,NCHOP
            A1 = F2(K,I,J)
            IF (NCHCL.EQ.0) GOTO 500
            DO 490 IP = 1,NCHCL
              A1 = A1 - W1(I,IP)*F2(K,NCHOP+IP,J)
  490       CONTINUE
  500       W2(I,J) = A1
  510     CONTINUE
  520   CONTINUE
C
C   CALCULATE F1(OPEN-OPEN) = P*W2
C
        DO 550 I = 1,NCHOP
          DO 540 J = 1,NCHOP
            A1 = 0.0D0
            DO 530 IP = 1,NCHOP
              A1 = A1 + A(I,IP)*W2(IP,J)
  530       CONTINUE
            F1(K,I,J) = A1
  540     CONTINUE
  550   CONTINUE
C
C   COMPUTE OPEN-CLOSED ELEMENTS OF F1 (LINE 2 OF EQ.(3.15))
C   CALCULATE W2 = Q*SR(CLOSED-CLOSED) - SR(OPEN-CLOSED)
C
        IF (NCHCL.EQ.0) GOTO 620
        DO 580 I = 1,NCHOP
          DO 570 J = 1,NCHCL
            A1 = SR(I,NCHOP+J)
            DO 560 IP = 1,NCHCL
              A1 = A1 - W1(I,IP)*SR(IP+NCHOP,J+NCHOP)
  560       CONTINUE
            W2(I,J) = -A1
  570     CONTINUE
  580   CONTINUE
C
C   CALCULATE F1(OPEN-CLOSED) = P*W2
C
        DO 610 I = 1,NCHOP
          DO 600 J = 1,NCHCL
            A1 = 0.0D0
            DO 590 IP = 1,NCHOP
              A1 = A1 + A(I,IP)*W2(IP,J)
  590       CONTINUE
            F1(K,I,NCHOP+J) = A1
  600     CONTINUE
  610   CONTINUE
C
C   F1 NOW COMPUTED IN THE FORM OF EQ.(3.13)
C   ----------------------------------------
C
        GOTO 880
C
C   CASE OF ALL CLOSED CHANNELS
C   ---------------------------
C
C   AT PRESENT F1 IS THE UNIT MATRIX (I.E. IN THE FORM OF EQ.(3.13)).
C   FOR THE CASE OF ALL CHANNELS CLOSED AND Z.GT.0 F1 MAY NEED TO BE
C   TRANSFORMED TO A MORE SUITABLE FORM. THE METHOD USED DEPENDS ON
C   THE PARAMETER METHOD CALCULATED IN SUBROUTINE ASYMPT (SEE SECTION
C   10.3 OF PAPER III AND COMMENTS IN SUBROUTINE ASYMPT). NOTE THAT
C   THE FINAL NORMALISATION (DEFINED BY EQS. (10.14) AND (7.9) OF
C   PAPER III) IS PERFORMED IN ASYMPT AFTER RETURNING FROM FG.
C   FOR THE CASE OF ALL CHANNELS CLOSED AND Z = 0 NO TRANSFORMATION IS
C   REQUIRED. THE PARAMETER METHOD AND THE ARRAY KJ(J) HAVE BEEN
C   INITIALISED TO 1 AS THE PROCEDURE USED IS IDENTICAL TO THAT USED
C   FOR METHOD = 1 AND Z.GT.0.
C
C   IF METHOD = 1 IS USED, NO CHANGE IS REQUIRED AT THIS STAGE.
C   F1 IS TAKEN TO BE THE UNIT MATRIX
C
  620   CONTINUE
        IF (METHOD.EQ.1) GOTO 880
C
C   METHOD = 2 IS USED. THE PROCEDURE IS DESCRIBED IN SECTION
C   10.3(III) OF PAPER III.
C
C   STORE F2 IN A AND INVERT
C
        DO 640 I = 1,NCHF
          DO 630 J = 1,NCHF
            A(I,J) = F2(K,I,J)
  630     CONTINUE
  640   CONTINUE
        CALL MTINV(A,NCHF)
C
C  COMPUTE A*SR AND STORE IN DD
C
        DO 670 I = 1,NCHF
          DO 660 J = 1,NCHF
            A1 = 0.0D0
            DO 650 L = 1,NCHF
              A1 = A1 + A(I,L)*SR(L,J)
  650       CONTINUE
            DD(I,J) = A1
  660     CONTINUE
  670   CONTINUE
C
C  SOLVE THE EQUATIONS DD*UPPERT=UNITLT WHERE -
C    UPPERT IS UPPER TRIANGULAR
C    UNITLT IS UNIT LOWER TRIANGULAR.
C  STORE UPPERT AND LOWER PART OF UNITLT IN A.
C  SCAN FOR DEGENERATE GROUPS OF CHANNELS.
C
        DO 750 J = 1,NCHF
          IF (J.EQ.1) GOTO 700
          J1 = J - 1
          DO 690 I = J,NCHF
            A1 = DD(J1,I)
            DO 680 L = J,NCHF
              DD(L,I) = DD(L,I) - DD(L,J1)*A1
  680       CONTINUE
  690     CONTINUE
  700     CONTINUE
          A1 = 1.0D0/DD(J,J)
          A(J,J) = A1
          IF (J.EQ.NCHF) GOTO 720
          J2 = J + 1
          DO 710 I = J2,NCHF
            DD(J,I) = A1*DD(J,I)
            A(I,J) = DD(I,J)*A1
  710     CONTINUE
  720     CONTINUE
          IF (J.EQ.1) GOTO 750
          I = J
          DO 740 L = 1,J1
            I2 = I
            I = I - 1
            A1 = 0.0D0
            DO 730 L2 = I2,J
              A1 = A1 - DD(I,L2)*A(L2,J)
  730       CONTINUE
            A(I,J) = A1
  740     CONTINUE
  750   CONTINUE
        J1 = 1
  760   CONTINUE
        J2 = NDU(J1)
C
C   IF KJ(J) = 2 FOR ANY MEMBER OF GROUP USE CASE (A) OF SECTION 10.3
C   OF PAPER III. OTHERWISE USE CASE (B), FOR WHICH NO CHANGE IS
C   REQUIRED AT THIS STAGE
C
        DO 770 J = J1,J2
          IF (KJ(J).EQ.2) GOTO 780
  770   CONTINUE
C
C  CASE (B) IS USED.
C
        GOTO 880
C
C  CASE (A) IS USED. MAKE TRANSFORMATION REQUIRED IN ORDER TO
C   SATISFY EQS. (10.17) AND (10.18) OF PAPER III
C
  780   CONTINUE
        IF (J1.EQ.J2) GOTO 860
        J2M = J2 - 1
        DO 850 J = J1,J2M
          JP = J + 1
          X(J) = 1.0D0
          DO 800 I = JP,J2
            IM = I - 1
            A1 = 0.0D0
            DO 790 L = J,IM
              A1 = A1 + A(I,L)*X(L)
  790       CONTINUE
            X(I) = -A1
  800     CONTINUE
          DO 820 I = 1,J
            A1 = A(I,J)
            DO 810 L = JP,J2
              A1 = A1 + A(I,L)*X(L)
  810       CONTINUE
            F1(K,I,J) = A1
  820     CONTINUE
          DO 840 I = JP,J2
            A1 = 0.0D0
            DO 830 L = I,J2
              A1 = A1 + A(I,L)*X(L)
  830       CONTINUE
            F1(K,I,J) = A1
  840     CONTINUE
  850   CONTINUE
  860   CONTINUE
        DO 870 I = 1,J2
          F1(K,I,J2) = A(I,J2)
  870   CONTINUE
        IF (J2.EQ.NCHF) GOTO 880
        J1 = J2 + 1
        GOTO 760
C
C   F1 NOW COMPUTED IN FINAL FORM
C   -----------------------------
C
C   PART C -- CALCULATE SOLUTIONS AT R2
C   ======
C
C   COMPUTE RFGP*RFG = DD
C
  880   CONTINUE
        DO 910 I = 1,NCHF
          DO 900 J = 1,NCHF
            A1 = 0.0D0
            DO 890 IP = 1,NCHF
              A1 = A1 + RFGP(I,IP)*RFG(IP,J)
  890       CONTINUE
            DD(I,J) = A1
  900     CONTINUE
  910   CONTINUE
C
C   COMPUTE NEW F2 = DD*F1 (EQ. (10.9) OF PAPER III)
C
        DO 940 I = 1,NCHF
          DO 930 J = 1,NCHF
            A1 = 0.0D0
            DO 920 IP = 1,NCHF
              A1 = A1 + DD(I,IP)*F1(K,IP,J)
  920       CONTINUE
            F2(K,I,J) = A1
  930     CONTINUE
  940   CONTINUE
C
C   NEW F2 NOW COMPUTED
C   -------------------
C
C   RESET RA
C
        RA = RA + MFG*DR
C
C   PUT STORED RFG ON UNIT KFILE IF IPUNCH = 1
C
        IF (IPUNCH.EQ.0) GOTO 980
        DO 970 MST = 1,MFGP1
          DO 960 I = 1,NCHF
            DO 950 J = 1,NCHF
              RRFG(I,J) = RFGST(MST,I,J)
  950       CONTINUE
  960     CONTINUE
          WRITE (KFILE) RRFG
  970   CONTINUE
  980 CONTINUE
C
C   END OF DO LOOP ON K CASES
C   =========================
C
C   RESET ENERGY FOR ALL CHANNELS CLOSED AND METH = 0
C
      IF (NCHOP.GT.0) RETURN
      IF (KMETH.EQ.1) RETURN
      DO 990 I = 1,NCHF
        ET(I) = ET(I) - DEL1
  990 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE INTERP(F,K)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C   INTERP INTERPOLATES SOLUTIONS AT THE INPUT AND INCREMENTED
C   ENERGIES TO OBTAIN THE SOLUTIONS AT THE CONVERGED ENERGY
C
C   FOR I = 1,NCHF AND J = 1,NCHF
C
C   F(1,I,J) STORES SOLUTIONS AT THE INPUT ENERGY
C   F(2,I,J) STORES SOLUTIONS AT THE INCREMENTED ENERGY
C
C   THE SOLUTIONS AT THE CONVERGED ENERGY ARE CALCULATED AND STORED IN
C   ARRAY F3 IN COMMON/FINT/, WHERE
C
C   F3(K,I,J) = B1 * F(1,I,J) + B2 * F(2,I,J)
C
C   WHERE  B2 = (ECON - SQK)/DEL1,   B1 = 1 - B2
C
C   K IS AN INDEX DEFINING THE SOLUTIONS TO BE INTERPOLATED
C
C   K = 1 -- SOLUTIONS AT R1
C   K = 2 -- SOLUTIONS AT R2
C   K = 3 -- SOLUTIONS AT R0
C   K = 4 -- DERIVATIVES OF SOLUTIONS AT R0
C
      COMMON /FINT/F3(4,MCHF,MCHF)
C
      DIMENSION F(2,MCHF,MCHF)
C
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MCHF,MCHF,MLMX),
     A       F1(2,MCHF,MCHF),F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,
     B       DEL1,SZ,R1,R2,R0,RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,
     C       ISOLN,KMETH,IPUNCH,NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,
     D       JFILE,KFILE,MFGP1,IALT,JALT,KALT
C
C   INTERPOLATE TO CONVERGED ENERGY
C   ===============================
C
      DO 20 I = 1,NCHF
        DO 10 J = 1,NCHF
          F3(K,I,J) = B1*F(1,I,J) + B2*F(2,I,J)
   10   CONTINUE
   20 CONTINUE
C
C   WRITE ONTO JFILE
C   ================
C
      IF (JFILE.EQ.0) GOTO 40
      DO 30 I = 1,NCHF
        WRITE (JFILE,3070) (F3(K,I,J),J=1,NCHF)
   30 CONTINUE
C
C   PRINT OUT SOLUTIONS
C   ===================
C
   40 CONTINUE
      IF (IBUG.EQ.0) RETURN
      WRITE (MT6,3020)
      IF (K.EQ.1) WRITE (MT6,3000)
      IF (K.EQ.2) WRITE (MT6,3010)
      IF (K.EQ.3) WRITE (MT6,3030)
      IF (K.EQ.4) WRITE (MT6,3040)
      M1 = (NCHF-1)/10 + 1
      M2 = 1
      DO 60 M = 1,M1
        IF (M.NE.1) WRITE (MT6,3050)
        M3 = M2 + 9
        IF (M3.GT.NCHF) M3 = NCHF
        DO 50 I = 1,NCHF
          WRITE (MT6,3060) (F3(K,I,J),J=M2,M3)
   50   CONTINUE
        M2 = M2 + 10
   60 CONTINUE
C
 3000 FORMAT (/,'  DECAYING SOLUTIONS AT R1 AT CONVERGED ENERGY')
 3010 FORMAT (/,'  DECAYING SOLUTIONS AT R2 AT CONVERGED ENERGY')
 3020 FORMAT (///'  INTERPOLATED SOLUTIONS FROM INTERP',/,2X,34 ('*'))
 3030 FORMAT (/,'  DECAYING SOLUTIONS AT R0 AT CONVERGED ENERGY')
 3040 FORMAT (/,'  DERIVATIVES OF SOLUTIONS AT R0 AT CONVERGED ENERGY')
 3050 FORMAT (//)
 3060 FORMAT (10E12.4)
 3070 FORMAT (5E16.9)
      END
CEND********************************************************************
      SUBROUTINE ITERA(NIT,EROR,RO,RF,IBUG,IOUT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     PHASE BY WBK AND AMPLITUDE BY ITERATION OF DIFFERENTIAL EQUATION
C
C     NOT APPLICABLE FOR NZD = 0
C
C     NIT=MAXIMUM NUMBER OF ITERATIONS TO BE ATTEMPTED
C     EROR=CONVERGENCE CRITERION
C     RO=DESIRED VALUE OF R, USED FOR LAST MESH POINT
C     RF=MINIMUM VALUE OF R FOR WHICH CONVERGENCE OBTAINED
C
      LOGICAL CNVG
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*15*MCHF-4*MCHF-3)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,15,MCHF),VF1(MCHF),VF2(MCHF),VFDR1(MCHF),VFDR2(MCHF),
     D       ZA,ZB,DUM(MXDUM),DUM1(1,1,1)
C
      DIMENSION TM1N(MCHF),TM2N(MCHF),TM1(100),TM2(100)
C
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN04/HY,NHY,J
C
C  MESH FOR INTEGRATION OVER VARIABLE U=SQRT(1./R) IN EQUATION (24)
C  OF NORCROSS, CPC 1 (1969) 88.  INTEGRATIONS FROM U=0. TO
C  U=SQRT(1./R0) ARE PERFORMED WITH NHY EQUAL INTERVALS IN U,
C  WHERE NHY IS SET EQUAL TO 10 IN ASYSM.  IF CONVERGENCE IS NOT
C  SATISFACTORY AT R = R0, ITERA USES A LARGER VALUE , RF , OF R
C  AND CORRESPONDING SMALLER NUMBER , IMAX , OF MESH INTERVALS.
C  THE SMALLEST VALUE OF IMAX CONSIDERED TO BE SATISFACTORY IS
C  (NGY + 1) WHERE NGY IS SET EQUAL TO NHY/3  .
C
C  INITIALIZATION
C
      NGY = NHY/3
      ZA1 = NZD
      RF = RO
      NHY1 = NHY - 1
      NITM1 = NIT - 1
      NDRV = NIT + NIT
      NDAB = NDRV + 1
      NPP = NDRV - 1
C
      CALL ZETA(NDRV)
      CALL PPFS(NPP)
C
C  DEFINE CHAIN RULE COEFFICIENTS FOR USE IN SUBROUTINE DCHAIN
C
      ALP(1,1) = 1.0D0
      ALP(2,1) = 1.0D0
      ALP(1,2) = 1.0D0
      ALP(2,2) = 2.0D0
      ALP(3,2) = 1.0D0
      K = 2
      KM = 1
      DO 20 KK = 4,NPP
        K = K + 1
        KM = KM + 1
        ALP(1,K) = 1.0D0
        ALP(2,K) = K
        ALP(KK,K) = 1.0D0
        DO 10 KP = 3,K
          ALP(KP,K) = ALP(KP,KM) + ALP(KP-1,KM)
   10   CONTINUE
   20 CONTINUE
C
C     FIRST APPROXIMATION
C
      DO 50 I = 1,NCNL
        DO 40 ND = 1,NDAB
          DO 30 IM = 1,NHY
            AB1(I,ND,IM) = 0.0D0
            AB2(I,ND,IM) = 0.0D0
   30     CONTINUE
   40   CONTINUE
   50 CONTINUE
      DO 60 IM = 1,NHY
        AB1(J,1,IM) = 1.0D0
   60 CONTINUE
      CNVG = .TRUE.
C
C     START ITERATING
C
      DO 150 NT = 2,NIT
        NDRV = NDRV - 2
        NDG = NDRV + 1
        CALL POP(1,1,2)
        CALL QROP(1,1,1,2)
        DO 70 NDR = 2,NDG
          ND = NDR
          CALL POP(ND,1,2)
          CALL QROP(ND,1,1,2)
          ND = ND - 1
          CALL POP(ND,2,1)
          CALL QROP(ND,2,2,1)
   70   CONTINUE
        IF (NT.EQ.2) GOTO 100
C
C     CONVERGENCE CHECK
C
        DO 80 I = 1,NCNL
          IF (ABS(AB1(I,1,NHY)-TM1N(I)).GT.EROR) GOTO 90
          IF (ABS(AB2(I,1,NHY)-TM2N(I)).GT.EROR) GOTO 90
   80   CONTINUE
        GOTO 170
C
   90   CONTINUE
        IF (NT.EQ.NIT) GOTO 160
  100   CONTINUE
        DO 110 I = 1,NCNL
          TM2N(I) = AB2(I,1,NHY)
          TM1N(I) = AB1(I,1,NHY)
  110   CONTINUE
        IF (NT.NE.NITM1) GOTO 150
        ICT = 0
        DO 130 IM = NGY,NHY1
          DO 120 I = 1,NCNL
            ICT = ICT + 1
            TM2(ICT) = AB2(I,1,IM)
            TM1(ICT) = AB1(I,1,IM)
  120     CONTINUE
  130   CONTINUE
        DO 140 I = 1,NCNL
          ICT = ICT + 1
          TM1(ICT) = TM1N(I)
          TM2(ICT) = TM2N(I)
  140   CONTINUE
  150 CONTINUE
C
  160 CONTINUE
      CNVG = .FALSE.
  170 CONTINUE
      IMAX = NHY
C
C     CONVERGENCE FOR RO
C
      IF (CNVG) GOTO 230
C
C     SEARCH FOR MINIMUM VALUE OF R FOR WHICH CONVERGENCE HOLDS
C
      ICT = 0
      DO 210 IM = NGY,NHY
        IN = IM
        DO 200 I = 1,NCNL
          ICT = ICT + 1
          IF (ABS(AB2(I,1,IM)-TM2(ICT)).LE.EROR) GOTO 180
          GOTO 190
C
  180     CONTINUE
          IF (ABS(AB1(I,1,IM)-TM1(ICT)).LE.EROR) GOTO 200
  190     CONTINUE
          IMAX = IN - 1
          GOTO 220
C
  200   CONTINUE
  210 CONTINUE
  220 CONTINUE
      ZA1 = DBLE(IMAX)*HY
      RF = 1.0D0/ (ZA1*ZA1*DBLE(NZD))
      IF (IMAX.GT.NGY) GOTO 230
C
C     IMAX TOO SMALL -- CONVERGENCE NOT OBTAINED
C
      IF (IBUG.GT.0) WRITE (IOUT,3010) IMAX,RF
      RF = 1.0D8
      RETURN
C
C     CONVERGENCE OBTAINED
C     DEFINITION OF AMPLITUDE PARAMETERS
C
  230 CONTINUE
      DO 240 I = 1,NCNL
        VF1(I) = AB1(I,1,IMAX)
        VFDR1(I) = AB1(I,2,IMAX)
        VF2(I) = AB2(I,1,IMAX)
        VFDR2(I) = AB2(I,2,IMAX)
  240 CONTINUE
      ZA = ZET(1,IMAX)
      ZB = ZET(2,IMAX)*ZTIN(1,IMAX)*0.5D0
      IF (IBUG.EQ.1) WRITE (IOUT,3000) J,IMAX,RF
C
 3000 FORMAT (' TRIED ITERATION METHOD IN CHANNEL',I3,
     A       ', CONVERGENCE AT MESH POINT',I3,' (RFI =',E13.5,')')
 3010 FORMAT (' ITERATIVE METHOD FAILED. OBTAINED IMAX =',I5,
     A       ' WHICH IS TOO SMALL.'/' IF ITERATIVE METHOD REQUIRED,',
     B      'USE VALUE OF MFG SUCH THAT ASYMPTOTIC ROUTINES CALLED FOR '
     C       ,'R GREATER THAN ',E13.5)
      END
CEND********************************************************************
      SUBROUTINE MTINV(A,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200)
C
C   MATRIX INVERSION ROUTINE WITH FULL PIVOTING
C
      DIMENSION A(MCHF,MCHF),IND1(MCHF),IND2(MCHF),IPIVOT(MCHF)
      DIMENSION DUM(MCHF)
C
      IF (N.EQ.1) GOTO 230
C
C INITIALISATION
C
      DO 10 J = 1,N
        IPIVOT(J) = 0
   10 CONTINUE
      DO 160 I = 1,N
C
C   SEARCH FOR PIVOT
C
        AMAX = 0.0D0
        DO 60 J = 1,N
          IF (IPIVOT(J)-1) 20,60,20
   20     CONTINUE
          DO 50 K = 1,N
            IF (IPIVOT(K)-1) 30,50,220
   30       CONTINUE
            IF (ABS(AMAX)-ABS(A(J,K))) 40,50,50
   40       CONTINUE
            IR = J
            IC = K
            AMAX = A(J,K)
   50     CONTINUE
   60   CONTINUE
        IPIVOT(IC) = IPIVOT(IC) + 1
C
        IF (IR-IC) 70,110,70
   70   CONTINUE
        DO 80 L = 1,N
          DUM(L) = A(IR,L)
   80   CONTINUE
        DO 90 L = 1,N
          A(IR,L) = A(IC,L)
   90   CONTINUE
        DO 100 L = 1,N
          A(IC,L) = DUM(L)
  100   CONTINUE
  110   CONTINUE
        IND1(I) = IR
        IND2(I) = IC
        PIVI = 1.0D0/A(IC,IC)
        A(IC,IC) = 1.0D0
        DO 120 L = 1,N
          A(IC,L) = A(IC,L)*PIVI
  120   CONTINUE
        DO 150 L1 = 1,N
          IF (L1-IC) 130,150,130
  130     CONTINUE
          T = A(L1,IC)
          A(L1,IC) = 0.0D0
          DO 140 L = 1,N
            A(L1,L) = A(L1,L) - A(IC,L)*T
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
      L = N + 1
      DO 210 I = 1,N
        L = L - 1
        IF (IND1(L)-IND2(L)) 170,210,170
  170   CONTINUE
        JR = IND1(L)
        JC = IND2(L)
        DO 180 K = 1,N
          DUM(K) = A(K,JR)
  180   CONTINUE
        DO 190 K = 1,N
          A(K,JR) = A(K,JC)
  190   CONTINUE
        DO 200 K = 1,N
          A(K,JC) = DUM(K)
  200   CONTINUE
  210 CONTINUE
  220 CONTINUE
      RETURN
C
  230 CONTINUE
      A(1,1) = 1.0D0/A(1,1)
      END
CEND********************************************************************
      SUBROUTINE OMEGA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     (SEE CPC SECTION 7.2)
C
C   OMEGA CALCULATES RADIAL FUNCTION OUTPUT FOR THE CASE OF
C   SOME CHANNELS OPEN
C
C   COMPUTES FUNCTIONS AT R(M) = R1 + M*(R2-R1)*0.5     M = 0, (MFG+1)
C
C   STORE IN FAS(M,I,J), (I=1,NCHF)  (J=1,NCHOP)
C
C   STORE FUNCTIONS AT R IN F2K(I,J)   (I=1,NCHF),  (J=1,NCHOP)
C
C     WHERE K = 1, F21 = LINEAR COMBINATION OF SIN SOLUTIONS AND
C                        DECAYING SOLUTIONS
C           K = 2, F22 = LINEAR COMBINATION OF COS SOLUTIONS
C
C   FOR J = 1,NCHOP A(I,J) = SMALL A FOR I = 1,NCHOP
C                          = SMALL D FOR I = (NCHOP+1),NCHF
C                   B(I,J) = SMALL B FOR I = 1,NCHOP
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXDUM=MXMATX-5*MCHF*MCHF-MXMFG*MCHF*MCHF)
C
      COMMON /MATRIX/F11(MCHF,MCHF),F12(MCHF,MCHF),F21(MCHF,MCHF),
     A       F22(MCHF,MCHF),RFGST(MXMFG,MCHF,MCHF),RRFG(MCHF,MCHF),
     B       DUM(MXDUM)
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MCHF,MCHF,MLMX),
     A       F1(2,MCHF,MCHF),F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,
     B       DEL1,SZ,R1,R2,R0,RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,
     C       ISOLN,KMETH,IPUNCH,NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,
     D       JFILE,KFILE,MFGP1,IALT,JALT,KALT
      COMMON /ABD/A(MCHF,MCHF),B(MCHF,MCHF),D(MCHF)
C
C   READ OFF STORED RFG MATRICES FOR SIN SOLUTIONS
C   ==============================================
C
      REWIND KFILE
      DO 30 M = 1,MFGP1
        MM = M + 1
        READ (KFILE) RRFG
        DO 20 I = 1,NCHF
          DO 10 J = 1,NCHF
            RFGST(MM,I,J) = RRFG(I,J)
   10     CONTINUE
   20   CONTINUE
   30 CONTINUE
C
C   CALCULATE RADIAL FUNCTIONS AT R1
C   ================================
C
      DO 60 I = 1,NCHF
        DO 50 J = 1,NCHOP
          A1 = 0.0D0
          DO 40 L = 1,NCHF
            A1 = A1 + F1(1,I,L)*A(L,J)
   40     CONTINUE
          F21(I,J) = A1
   50   CONTINUE
   60 CONTINUE
      DO 90 I = 1,NCHF
        DO 80 J = 1,NCHOP
          A1 = 0.0D0
          DO 70 L = 1,NCHOP
            A1 = A1 + F1(2,I,L)*B(L,J)
   70     CONTINUE
          F22(I,J) = A1
   80   CONTINUE
   90 CONTINUE
      DO 110 I = 1,NCHF
        DO 100 J = 1,NCHOP
          RFGST(1,I,J) = F21(I,J) + F22(I,J)
  100   CONTINUE
  110 CONTINUE
C
C   COMPUTE RADIAL FUNCTIONS AT R(M)
C   ================================
C
      DO 240 M = 1,MFGP1
        MM = M + 1
C
C   PUT SOLUTIONS AT R(M-1) IN F11 AND F12
C
        DO 130 I = 1,NCHF
          DO 120 J = 1,NCHOP
            F11(I,J) = F21(I,J)
            F12(I,J) = F22(I,J)
  120     CONTINUE
  130   CONTINUE
C
C   CALCULATE NEW SIN SOLUTIONS AND STORE IN F21(I,J)
C
        DO 170 I = 1,NCHF
          DO 140 J = 1,NCHOP
            F21(I,J) = 0.0D0
  140     CONTINUE
          DO 160 L = 1,NCHF
            DO 150 J = 1,NCHOP
              F21(I,J) = F21(I,J) + RFGST(MM,I,L)*F11(L,J)
  150       CONTINUE
  160     CONTINUE
  170   CONTINUE
C
C   READ OFF STORED RFG MATRICES FOR COS SOLUTIONS
C
        READ (KFILE) RRFG
C
C   CALCULATE NEW COS FUNCTIONS AND STORE IN F22(I,J)
C
        DO 210 I = 1,NCHF
          DO 180 J = 1,NCHOP
            F22(I,J) = 0.0D0
  180     CONTINUE
          DO 200 L = 1,NCHF
            DO 190 J = 1,NCHOP
              F22(I,J) = F22(I,J) + RRFG(I,L)*F12(L,J)
  190       CONTINUE
  200     CONTINUE
  210   CONTINUE
C
C   CALCULATE LINEAR COMBINATION ON NEW SIN AND COS SOLUTIONS
C
        DO 230 I = 1,NCHF
          DO 220 J = 1,NCHOP
            RFGST(MM,I,J) = F21(I,J) + F22(I,J)
  220     CONTINUE
  230   CONTINUE
  240 CONTINUE
C
C   WRITE FUNCTIONS ON TO JFILE
C   ===========================
C
      MFGP2 = MFG + 2
      DO 260 I = 1,NCHF
        DO 250 J = 1,NCHOP
          WRITE (JFILE,3000) (RFGST(M,I,J),M=1,MFGP2)
  250   CONTINUE
  260 CONTINUE
      IF (IBUG.NE.2) RETURN
      WRITE (MT6,3010)
      DO 280 I = 1,NCHF
        DO 270 J = 1,NCHOP
          WRITE (MT6,3000) (RFGST(M,I,J),M=1,MFGP2)
  270   CONTINUE
  280 CONTINUE
C
 3000 FORMAT (5E16.7)
 3010 FORMAT (/,'  RADIAL FUNCTIONS IN ASYMPTOTIC REGION')
      END
CEND********************************************************************
      FUNCTION PHAS(RHO,E2,XKEY)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     SEE APPENDIX C SECTION (X) OF PAPER III
C
C   RHO = SCALED RADIAL VARIABLE = Z * R
C    E2 = SCALED ENERGY = (K**2)/(Z**2)
C  XKEY = 0 FOR EXPAN METHOD OF SOLUTION
C       = 1 FOR ITERA METHOD OF SOLUTION
C
C    ONLY CALLED FOR CASE Z .GT. 0 , E2 .GT. 0
C    CALCULATES PH PART OF PHASE, EQUATIONS (C25) AND (C26)
C    EQUATION NUMBERS REFER TO PAPER III
C
      ALF = SQRT(E2)
      IF (XKEY.EQ.1.0D0) GOTO 10
C
C  EXPAN METHOD
C  ------------
C
C    USE FORM OF PHAS GIVEN BY EQUATION (C25)
C
      RH = ALF*RHO
      A1 = 1.0D0/ALF
      PHAS = RH + A1* (1.0D0+LOG(2.0D0*RH*ALF))
      RETURN
C
C  ITERA METHOD
C  ------------
C
C    PHAS DEFINED BY EQUATION (C26)
C
   10 CONTINUE
      RX = RHO*SQRT(E2+2.0D0/RHO)
      A1 = 1.0D0 + RHO*E2
      A2 = ALF*RX/A1
      IF (A2.GE.0.1D0) GOTO 40
C
C    USE FORM OF PHAS GIVEN BY EQUATION (C28)
C
      A3 = A2*A2
      A2 = A1 + A1
      A4 = 1.0D0
      A6 = 1.0D0
   20 CONTINUE
      A5 = A4/A1
      A6 = A6 + A5
      IF (A5.LT.1.0D-6) GOTO 30
      A1 = A1 + A2
      A4 = A4*A3
      GOTO 20
C
   30 CONTINUE
      PHAS = RX*A6
      RETURN
C
C    USE FORM OF PHAS GIVEN BY EQUATION (C26)
C
   40 CONTINUE
      PH = 1.0D0 + RHO*E2 + RX*ALF
      PHAS = RX + LOG(PH)/ALF
C
      END
CEND********************************************************************
      SUBROUTINE POP(NDRV,NBA,NAP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     ITERATION OPERATOR FOR DEGENERATE ENERGIES
C
C     OPERATOR P ON A(NAP=1) OR B(NAP=2)
C
C     RESULT STORED IN A(NBA=1) OR B(NBA=2)
C
C     RESULT TIMES MINUS 1 IF NBA=1
C
C     DERIVATIVE NDRV-1 OF P IN STATE I
C
C     RESULT OBTAINED FOR EACH MESH POINT
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MCHF,MCHF,MLMX),E2(MCHF),
     B       PP(12,10),T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,MCHF,15),DUM1(1,1,1),DUM2(MXDUM2)
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
      COMMON /CMN04/HY,NHY,J
      COMMON /CMN14/CH(10),BI(10),BO(10),P1(10),Z1(10)
C
      DIMENSION AB(10,MCHF),NJ(MCHF)
C
      NDLJ = NDL(J)
      NDUJ = NDU(J)
      SGN = 0.5D0
      IF (NBA.EQ.1) SGN = -SGN
      IF (J.GT.NOP) SGN = -SGN
      IF (NDRV.GT.1) GOTO 230
      IF (NAP.EQ.2) GOTO 30
      DO 20 IM = 1,NHY
        Z = ZTIN(1,IM)
        Z1(IM) = Z
        P1(IM) = PP(1,IM)
        DO 10 IK = 1,NCNL
          AB(IM,IK) = AB1(IK,1,IM)*Z
   10   CONTINUE
   20 CONTINUE
      GOTO 60
C
   30 CONTINUE
      DO 50 IM = 1,NHY
        Z = ZTIN(1,IM)
        Z1(IM) = Z
        P1(IM) = PP(1,IM)
        DO 40 IK = 1,NCNL
          AB(IM,IK) = AB2(IK,1,IM)*Z
   40   CONTINUE
   50 CONTINUE
   60 CONTINUE
      DO 220 I = 1,NCNL
        IF (I.LT.NDLJ) GOTO 220
        IF (I.GT.NDUJ) GOTO 220
        DO 70 IK = I,NCNL
          NJ(IK) = I + (IK*IK-IK)/2
   70   CONTINUE
        IF (I.EQ.1) GOTO 90
        I1 = I - 1
        I2 = (I*I1)/2
        DO 80 IK = 1,I1
          NJ(IK) = IK + I2
   80   CONTINUE
   90   CONTINUE
        Y = 0.0D0
        DO 110 IM = 1,NHY
          SUM = 0.0D0
          Y = Y + HY
          DO 100 IK = 1,NCNL
            IJ = NJ(IK)
            SUM = SUM + AB(IM,IK)*V(IJ,1,IM)
  100     CONTINUE
          BI(IM) = 2.0D0* (SUM+AB(IM,I)*P1(IM))/ (Y*Y*Y)
  110   CONTINUE
        BOR = 0.0D0
        IF (I.NE.J) GOTO 120
        IF (NBA.EQ.1) GOTO 120
        IF (E2(J).NE.0.0D0) GOTO 120
        BOR = SQRT(2.0D0)* (CC(J,J,1)-0.1875D0)
  120   CONTINUE
        CALL BOOLE(BOR)
        CON = 0.0D0
        IF (I.NE.J) GOTO 140
        IF (NBA.EQ.1) GOTO 130
        IF (J.LE.NOP) GOTO 140
  130   CONTINUE
        CON = 1.0D0
  140   CONTINUE
        IF (NBA.EQ.2) GOTO 180
        IF (NAP.EQ.2) GOTO 160
        DO 150 IM = 1,NHY
          AB1(I,1,IM) = SGN* (AB1(I,2,IM)*Z1(IM)-BO(IM)) + CON
  150   CONTINUE
        GOTO 220
C
  160   CONTINUE
        DO 170 IM = 1,NHY
          AB1(I,1,IM) = SGN* (AB2(I,2,IM)*Z1(IM)-BO(IM)) + CON
  170   CONTINUE
        GOTO 220
C
  180   CONTINUE
        IF (NAP.EQ.2) GOTO 200
        DO 190 IM = 1,NHY
          AB2(I,1,IM) = SGN* (AB1(I,2,IM)*Z1(IM)-BO(IM)) + CON
  190   CONTINUE
        GOTO 220
C
  200   CONTINUE
        DO 210 IM = 1,NHY
          AB2(I,1,IM) = SGN* (AB2(I,2,IM)*Z1(IM)-BO(IM)) + CON
  210   CONTINUE
  220 CONTINUE
      RETURN
C
  230 CONTINUE
      NP1 = NDRV
      NP2 = NDRV - 1
      DO 270 I = 1,NCNL
        IF (I.LT.NDLJ) GOTO 270
        IF (I.GT.NDUJ) GOTO 270
        II = I
        CALL DCHAIN(P1,II,NP1,0,NAP,2,PP,0,ZTIN,1)
        CALL DCHAIN(Z1,II,NP2,1,NAP,1,ZTIN,1,PP,0)
        CALL DCHAIN(CH,II,NP2,0,NAP,1,PP,1,ZTIN,1)
        IF (NBA.EQ.2) GOTO 250
        DO 240 IM = 1,NHY
          AB1(I,NDRV,IM) = SGN* (P1(IM)+Z1(IM)+CH(IM))
  240   CONTINUE
        GOTO 270
C
  250   CONTINUE
        DO 260 IM = 1,NHY
          AB2(I,NDRV,IM) = SGN* (P1(IM)+Z1(IM)+CH(IM))
  260   CONTINUE
  270 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE POTS(NDRV)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     POTENTIALS FOR USE IN ITERATION METHOD (SUBROUTINE ITERA)
C     POTENTIAL AND DERIVATIVES UP TO NDRV-1 FOR ALL MESH POINTS
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MCHF,MCHF,MLMX),E2(MCHF),
     B       PP(12,10),T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,MCHF,15),DUM1(1,1,1),DUM2(MXDUM2)
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN04/HY,NHY,JJ
C
      IF (NDRV.GT.1) GOTO 20
      DO 10 M = 1,LAMAX
        ALP(M,1) = 1.0D0
   10 CONTINUE
      GOTO 50
C
   20 CONTINUE
      DO 40 M = 1,LAMAX
        ALP(M,1) = 1.0D0
        A1 = 1.0D0
        FF = M
        DO 30 ID = 2,NDRV
          FF = FF + 1.0D0
          A1 = A1*FF
          ALP(M,ID) = A1
   30   CONTINUE
   40 CONTINUE
C
   50 CONTINUE
      HY2 = HY*HY
      DO 100 IM = 1,NHY
        Y1 = DBLE(IM*IM)*HY2
        YY = -1.0D0
        DO 90 ID = 1,NDRV
          YY = -Y1*YY
          DO 80 I = 1,NCNL
            DO 70 J = I,NCNL
              IJ = I + (J* (J-1))/2
              A1 = 0.0D0
              YZ = YY
              DO 60 M = 1,LAMAX
                YZ = Y1*YZ
                A1 = A1 + CC(I,J,M)*YZ*ALP(M,ID)
   60         CONTINUE
              V(IJ,ID,IM) = A1
   70       CONTINUE
   80     CONTINUE
   90   CONTINUE
  100 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE PPFS(NDRV)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     POINTS FOR SUBROUTINE ITERA
C     CORRECTION TERM IN WBK AMPLITUDE DIFFERENTIAL EQUATION
C     CORRECTION FACTOR Q AND DERIVATIVES UP TO NDRV-1 FOR ALL MESH
C          POINTS FOR SUBROUTINE ITERA
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,MCHF,15),DUM1(1,1,1),DUM2(MXDUM2)
      COMMON /CMN04/HY,NHY,J
C
      SGN = 1.0D0
      IF (E2(J).LT.0.0D0) SGN = -1.0D0
      Y1 = 0.0D0
      DO 10 IPT = 1,NHY
        Y1 = Y1 + HY
        Y2 = Y1*Y1
        Y3 = ZET(1,IPT)
        Y3 = Y2/ (Y3*Y3)
        PP(1,IPT) = (-SGN*Y2*Y2*Y3)*
     A              (1.0D0-SGN*1.25D0*Y3)
   10 CONTINUE
      IF (NDRV.EQ.1) RETURN
C
      S2 = SGN + SGN
      ALP(1,1) = S2 + SGN
      ALP(2,1) = -7.0D0
      ALP(3,1) = 5.0D0*SGN
      DO 30 KK = 3,NDRV
        K = KK - 1
        KM1 = K - 1
        KU = KK + 1
        ALP(1,K) = -KU*ALP(1,KM1)
        ALP(KU,K) = S2*KK*ALP(KK,KM1)
        DO 20 KP = 2,KK
          KS = KP - 1
          ALP(KP,K) = S2*KS*ALP(KS,KM1) - (KP+KK)*ALP(KP,KM1)
   20   CONTINUE
   30 CONTINUE
C
      Y0 = 0.0D0
C
      DO 80 IPT = 1,NHY
        Y0 = Y0 + HY
        Y1 = Y0*Y0
        Y2 = Y0/ZET(1,IPT)
        TEMP = Y2*Y2
        Y2 = Y1*Y1
        YMIN = 1.0D-36/TEMP
        K = 0
        KU = 2
        DO 70 KK = 2,NDRV
          K = K + 1
          KU = KU + 1
          Y2 = Y2*Y1
          Y3 = Y2
          S = 0.0D0
          DO 50 KP = 1,KU
            IF (Y3.LT.YMIN) GOTO 60
            Y3 = TEMP*Y3
            S = S + ALP(KP,K)*Y3
   50     CONTINUE
   60     CONTINUE
          PP(KK,IPT) = S
   70   CONTINUE
   80 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE PRTFNS(F)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C   PRTFNS WRITES THE VARIOUS SOLUTIONS ONTO UNIT MT6
C
      COMMON /SAVE/EL(MCHF),ET(MCHF),CC(MCHF,MCHF,MLMX),F1(2,MCHF,MCHF),
     A       F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,R0,
     B       RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,IPUNCH,
     C       NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
C
      DIMENSION F(MCHF,MCHF,2)
C
      KK = 1
      IF (NCHOP.GT.0) GOTO 10
      WRITE (MT6,3000)
      GOTO 30
C
   10 CONTINUE
      IF (NCHCL.EQ.0) GOTO 20
      WRITE (MT6,3010)
      GOTO 30
C
   20 CONTINUE
      WRITE (MT6,3030)
C
   30 CONTINUE
      M1 = (NCHF-1)/10 + 1
      M2 = 1
      DO 50 K = 1,M1
        IF (K.GT.1) WRITE (MT6,3050)
        M3 = M2 + 9
        IF (M3.GT.NCHF) M3 = NCHF
        DO 40 I = 1,NCHF
          WRITE (MT6,3060) (F(I,J,KK),J=M2,M3)
   40   CONTINUE
        M2 = M2 + 10
   50 CONTINUE
C
      IF (NCHOP.NE.0) GOTO 60
      IF (KK.EQ.KMETH) RETURN
      KK = 2
      WRITE (MT6,3070)
      GOTO 30
C
   60 CONTINUE
      M1 = (NCHOP-1)/10 + 1
      IF (NCHCL.EQ.0) WRITE (MT6,3040)
      IF (NCHCL.NE.0) WRITE (MT6,3020)
      M2 = 1
      DO 80 K = 1,M1
        M3 = M2 + 9
        IF (K.GT.1) WRITE (MT6,3050)
        IF (M3.GT.NCHOP) M3 = NCHOP
        DO 70 I = 1,NCHF
          WRITE (MT6,3060) (F(I,J,2),J=M2,M3)
   70   CONTINUE
        M2 = M2 + 10
   80 CONTINUE
C
C  PRINT FORMATS
C
 3000 FORMAT (/,'  DECAYING SOLUTIONS AT INPUT ENERGY')
 3010 FORMAT (/,
     A'  SIN SOLUTIONS FOR OPEN CHANNELS, DECAYING SOLUTIONS FOR CLOSED
     BCHANNELS ')
 3020 FORMAT (/,'  COS SOLUTIONS FOR OPEN CHANNELS')
 3030 FORMAT (/,'  SIN SOLUTIONS')
 3040 FORMAT (/,'  COS SOLUTIONS')
 3050 FORMAT (//)
 3060 FORMAT (10E12.4)
 3070 FORMAT (/,'  DECAYING SOLUTIONS AT INCREMENTED ENERGY')
      END
CEND********************************************************************
      SUBROUTINE QROP(NDRV,NBA,NAR,NAQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     ITERATION OPERATOR FOR NON-DEGENARATE ENERGIES
C     OPERATORS Q AND R ON A OR B FOR NAR OR NAQ 1 OR 2 RESP.
C     COMPUTES Q+R FOR NBA=1, Q-R FOR NBA=2
C     DERIVATIVE NDRV-1 OF QR IN STATE I
C     RESULT OBTAINED FOR EACH MESH POINT
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-2*MCHF*15-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),
     C       GAM(2,MCHF,15),DUM1(1,1,1),DUM2(MXDUM2)
      COMMON /CMN02/NCNL,NOP,LAMAX
      COMMON /CMN03/NDL(MCHF),NDU(MCHF)
      COMMON /CMN04/HY,NHY,J
      COMMON /CMN14/CH(10),CHN1(10),CHN2(10),CHN3(10),CHN4(10)
C
      SGN = 2.0D0
      IF (NBA.EQ.1) SGN = -2.0D0
      NP = NDRV
      NDLJ = NDL(J)
      NDUJ = NDU(J)
      E2J = E2(J)
      DO 50 I = 1,NCNL
        IF (I.LT.NDLJ) GOTO 10
        IF (I.GT.NDUJ) GOTO 10
        GOTO 50
C
   10   CONTINUE
        II = I
        DE = E2(I) - E2J
        CALL DCHAIN(CHN1,II,NP,0,NAR,3,ZTIN,0,ZET,0)
        CALL DCHAIN(CHN2,II,NP,0,NAR,2,ZTIN,2,ZET,1)
        CALL DCHAIN(CHN3,II,NP,1,NAR,1,ZTIN,0,ZET,0)
        CALL DCHAIN(CHN4,II,NP,0,NAR,1,ZET,0,PP,1)
        CALL DCHAIN(CH,II,NP,0,NAQ,2,PP,0,ZET,1)
        IF (NBA.GT.1) GOTO 30
        DO 20 IM = 1,NHY
          AB1(I,NP,IM) = - (CHN1(IM)+CHN2(IM)+CHN3(IM)+CHN4(IM)+
     A                   SGN*CH(IM))/DE
   20   CONTINUE
        GOTO 50
C
   30   CONTINUE
        DO 40 IM = 1,NHY
          AB2(I,NP,IM) = - (CHN1(IM)+CHN2(IM)+CHN3(IM)+CHN4(IM)+
     A                   SGN*CH(IM))/DE
   40   CONTINUE
   50 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE SECDRV(F,FDD,R,IC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C   CALCULATES SECOND DERIVATIVES OF A FUNCTION,FDD(R),
C   WHERE, GIVEN W AND F,
C
C       FDD(R) = - W(R) * F(R)
C
C      IC=0 --- DIFFERENT VALUE OF R FROM PREVIOUS CALL
C      IC=1 --- SAME VALUE OF R AS PREVIOUS CALL
C
      COMMON /SAVE/EL(MCHF),ET(MCHF),CC(MCHF,MCHF,MLMX),F1(2,MCHF,MCHF),
     A       F2(2,MCHF,MCHF),BB,DD,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,R0,
     B       RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,IPUNCH,
     C       NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
C
      DIMENSION W(MCHF,MCHF),F(2,MCHF,MCHF),FDD(2,MCHF,MCHF)
C
      IF (IC.EQ.1) GOTO 10
C
C   CALCULATE W MATRIX
C
      NCHOP1 = NCHOP + 1
      CALL WW(W,R)
C
   10 CONTINUE
      IF (NCHOP.EQ.0) GOTO 70
C
C   CASE OF SOME CHANNELS OPEN
C   ==========================
C
C   OPEN CHANNELS
C
      DO 60 L = 1,2
        DO 50 I = 1,NCHF
          DO 20 J = 1,NCHOP
            FDD(L,I,J) = 0.0D0
   20     CONTINUE
          DO 40 K = 1,NCHF
            DO 30 J = 1,NCHOP
              FDD(L,I,J) = FDD(L,I,J) - W(I,K)*F(L,K,J)
   30       CONTINUE
   40     CONTINUE
   50   CONTINUE
   60 CONTINUE
      IF (NCHCL.EQ.0) RETURN
C
C   CLOSED CHANNELS (INCLUDED IN...)
C
C   CASE OF ALL CHANNELS CLOSED
C   ===========================
C
   70 CONTINUE
      DO 110 I = 1,NCHF
        DO 80 J = NCHOP1,NCHF
          FDD(1,I,J) = 0.0D0
   80   CONTINUE
        DO 100 K = 1,NCHF
          DO 90 J = NCHOP1,NCHF
            FDD(1,I,J) = FDD(1,I,J) - W(I,K)*F(1,K,J)
   90     CONTINUE
  100   CONTINUE
  110 CONTINUE
      IF (NCHOP.NE.0) RETURN
      IF (KMETH.EQ.1) RETURN
C
      DO 120 I = 1,NCHF
        ET(I) = ET(I) + DEL1
  120 CONTINUE
      CALL WW(W,R)
      DO 160 I = 1,NCHF
        DO 130 J = 1,NCHF
          FDD(2,I,J) = 0.0D0
  130   CONTINUE
        DO 150 K = 1,NCHF
          DO 140 J = 1,NCHF
            FDD(2,I,J) = FDD(2,I,J) - W(I,K)*F(2,K,J)
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
      DO 170 I = 1,NCHF
        ET(I) = ET(I) - DEL1
  170 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE SOLNS(F0,F0D)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     (SEE CPC SECTION 6)
C
C   SOLNS CALCULATES THE SOLUTIONS AND THEIR FIRST DERIVATIVES AT R0
C   GIVEN THE SOLUTIONS AT R1 AND R2.
C
C   STORAGE OF THE SOLUTIONS IS
C
C   F1(K,I,J) -- SOLUTIONS AT R1
C   F2(K,I,J) -- SOLUTIONS AT R2
C   F0(I,J,K) -- SOLUTIONS AT R0
C   F0D(I,J,K) - DERIVATIVES OF THE SOLUTIONS AT R0
C
C   FOR SOME CHANNELS OPEN (FOR I = 1,NCHF)
C
C   K = 1, ARRAYS STORE SIN SOLUTIONS FOR J = 1,NCHOP AND DECAYING
C          SOLUTIONS FOR J = NCHOP+1,NCHF
C   K = 2, ARRAYS STORE COS SOLUTIONS FOR J = 1,NCHOP
C
C   FOR ALL CHANNELS CLOSED, FOR I = 1,NCHF AND J = 1,NCHF
C
C   K = 1, ARRAYS STORE DECAYING SOLUTIONS AT THE INPUT ENERGY
C   K = 2, ARRAYS STORE DECAYING SOLUTIONS AT THE INCREMENTED ENERGY
C
      DIMENSION F0(MCHF,MCHF,2),F0D(MCHF,MCHF,2)
C
      COMMON /SAVE/EL(MCHF),ET(MCHF),CC(MCHF,MCHF,MLMX),F1(2,MCHF,MCHF),
     A       F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,R0,
     B       RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,IPUNCH,
     C       NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
C
      DIMENSION F0DD(2,MCHF,MCHF),F1DD(2,MCHF,MCHF),F2DD(2,MCHF,MCHF)
      DIMENSION F0E(2,MCHF,MCHF),IK(2)
C
C   INITIALIZATION
C   ==============
C
      IF (IBUG.NE.0) WRITE (MT6,3000)
      ERROR = EROR*0.01D0
      H = (R2-R1)/2.0D0
      NIT = 0
      IK(1) = NCHF
      IK(2) = NCHOP
      IF (NCHOP.EQ.0) IK(2) = NCHF
      NITMX = 6
      MM = 2
      IF (NCHOP.EQ.0) MM = KMETH
C
C   CALCULATE SECOND DERIVATIVES AT R2 AND R1
C   =========================================
C
      RR = R1
      CALL SECDRV(F1,F1DD,RR,0)
      RR = R2
      CALL SECDRV(F2,F2DD,RR,0)
      IF (IBUG.LT.2) GOTO 10
      WRITE (MT6,3020) R2
      CALL PRTFNS(F2DD)
      WRITE (MT6,3020) R1
      CALL PRTFNS(F1DD)
C
C   EVALUATE FIRST DERIVATIVE AT RO
C   ===============================
C
   10 CONTINUE
      A1 = 1.0D0/ (H+H)
      A2 = H/12.0D0
      DO 40 K = 1,MM
        NN = IK(K)
        DO 30 I = 1,NCHF
          DO 20 J = 1,NN
            F0D(I,J,K) = A1* (F2(K,I,J)-F1(K,I,J)) -
     A                   A2* (F2DD(K,I,J)-F1DD(K,I,J))
   20     CONTINUE
   30   CONTINUE
   40 CONTINUE
C
C   EVALUATE INITIAL ESTIMATE FOR F0 (F(R0))
C   ========================================
C
      A1 = H*H/4.0D0
      DO 70 K = 1,MM
        NN = IK(K)
        DO 60 I = 1,NCHF
          DO 50 J = 1,NN
            F0E(K,I,J) = 0.5D0* (F1(K,I,J)+F2(K,I,J)) -
     A                   A1* (F1DD(K,I,J)+F2DD(K,I,J))
   50     CONTINUE
   60   CONTINUE
   70 CONTINUE
      IF (IBUG.LT.2) GOTO 80
      WRITE (MT6,3010) NIT
      CALL PRTFNS(F0E)
C
C   CALCULATE IMPROVED F0 BY ITERATING
C   ==================================
C
   80 CONTINUE
      A1 = A1/6.0D0
      A2 = A1*10.0D0
      IC = 0
      DO 110 K = 1,MM
        NN = IK(K)
        DO 100 I = 1,NCHF
          DO 90 J = 1,NN
            F1DD(K,I,J) = 0.5D0* (F1(K,I,J)+F2(K,I,J)) -
     A                    A1* (F1DD(K,I,J)+F2DD(K,I,J))
   90     CONTINUE
  100   CONTINUE
  110 CONTINUE
C
C   CALCULATE F0DD
C
  120 CONTINUE
      CALL SECDRV(F0E,F0DD,R0,IC)
      IF (IBUG.LT.2) GOTO 130
      WRITE (MT6,3020) R0
      CALL PRTFNS(F0DD)
C
C   CALCULATE IMPROVED F0
C
  130 CONTINUE
      NIT = NIT + 1
      DO 160 K = 1,MM
        NN = IK(K)
        DO 150 I = 1,NCHF
          DO 140 J = 1,NN
            F0(I,J,K) = F1DD(K,I,J) - A2*F0DD(K,I,J)
  140     CONTINUE
  150   CONTINUE
  160 CONTINUE
C
C   CHECK CONVERGENCE OF TWO SUCCESSIVE ESTIMATES FOR F0
C
      DO 190 K = 1,MM
        NN = IK(K)
        DO 180 I = 1,NCHF
          DO 170 J = 1,NN
            IF (ABS(F0(I,J,K)-F0E(K,I,J)).GT.ERROR) GOTO 200
  170     CONTINUE
  180   CONTINUE
  190 CONTINUE
      GOTO 250
C
C   NON-CONVERGENCE AFTER THIS ITERATION. CHECK NUMBER OF ITERATIONS AND
C   RE-ITERATE IF LESS THAN NITMX
C
  200 CONTINUE
      IF (NIT.EQ.NITMX) GOTO 240
C
C   SET NEW F0 AS ESTIMATE FOR F0
C
      DO 230 K = 1,MM
        NN = IK(K)
        DO 220 I = 1,NCHF
          DO 210 J = 1,NN
            F0E(K,I,J) = F0(I,J,K)
  210     CONTINUE
  220   CONTINUE
  230 CONTINUE
      IC = 1
      IF (IBUG.LT.2) GOTO 120
      WRITE (MT6,3010) NIT
      CALL PRTFNS(F0E)
      GOTO 120
C
C   NON-CONVERGENCE AFTER NITMX ITERATIONS
C
  240 CONTINUE
      WRITE (MT6,3060) ERROR,NITMX
      IF (IBUG.NE.9) RETURN
      NIT = NITMX - 1
      WRITE (MT6,3070) R0,NIT
      CALL PRTFNS(F0E)
      WRITE (MT6,3070) R0,NITMX
      CALL PRTFNS(F0)
      WRITE (MT6,3050)
      CALL PRTFNS(F0D)
      RETURN
C
C   CONVERGENCE OF ITERATIONS
C
  250 CONTINUE
      IF (IBUG.EQ.0) RETURN
      IF (IBUG.EQ.2) WRITE (MT6,3030) ERROR,NIT
      WRITE (MT6,3040) R0
      CALL PRTFNS(F0)
      WRITE (MT6,3050)
      CALL PRTFNS(F0D)
C
C   END OF ITERATION PART
C   =====================
C
C   PRINT FORMATS
C   =============
C
 3000 FORMAT (///,'  SOLUTIONS FROM SOLNS',/,2X,20 ('*'))
 3010 FORMAT (//,' ESTIMATE OF SOLUTIONS AT R0 AFTER',I2,' ITERATIONS')
 3020 FORMAT (//,'  SECOND DERIVATIVES OF SOLUTIONS AT ',F8.4)
 3030 FORMAT (/,'  CONVERGENCE OF SOLUTIONS AT R0 WITH ERROR =',E15.5,
     A       ' AFTER ',I2,' ITERATIONS')
 3040 FORMAT (//,'  SOLUTIONS AT R0 =',F8.4)
 3050 FORMAT (//,'  FIRST DERIVATIVES OF SOLUTIONS AT R0')
 3060 FORMAT (/,
     A'  ***WARNING***  NON-CONVERGENCE OF SOLUTIONS AT R0 WITH ERROR ='
     B       ,E15.5,' AFTER NITMX = ',I2,' ITERATIONS')
 3070 FORMAT (//,'  ESTIMATE OF SOLUTIONS AT R0 =',F8.4,' AFTER ',I2,
     A       ' ITERATIONS')
      END
CEND********************************************************************
      SUBROUTINE SOLV(R,H,MD,WF,WF1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     CALLED BY SUBROUTINES ASYMPT AND ASYSM
C
C     FOURTH ORDER RUNGE-KUTTA INTEGRATION OF COUPLED EQUATIONS
C     WF AND WF1 ARE STARTINE VALUES OF SOLUTION VECTOR AND DERIVATIVE
C     H = SIZE OF MESH POINTS, NEGATIVE FOR INWARD INTEGRATION
C     MD , NUMBER OF MESH POINTS TO MATCHING POINT RF=RS+MD*H
C     RETURNS WF AND WF1 VIA ARGUMENT LIST
C     FINAL VALUE OF R IS ALSO RETURNED
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX,MXCSQ=MCHF*MCHF)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-MXCSQ-5*MCHF-1)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/FX(2,MCHF,MCHF),FX1(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),W(MCHF,MCHF),
     C       C1(MCHF),C2(MCHF),D1(MCHF),D2(MCHF),D3(MCHF),DUM1(1,1,1),
     D       DUM2(MXDUM2)
C
      DIMENSION WF(MCHF),WF1(MCHF)
C
      COMMON /CMN02/N,NOP,M
      COMMON /WTR/B1,B2
C
      B1 = 0.0D0
      B2 = 0.0D0
      HH = H/2.0D0
C
C  SCALE E2,WF1
C
      Z2 = H*H
      IF (NZD.EQ.0) GOTO 10
      A1 = NZD*NZD
      Z2 = A1*Z2
      B2 = 2.0D0*Z2
   10 CONTINUE
      DO 20 I = 1,N
        E2(I) = E2(I)*Z2
        WF1(I) = WF1(I)*H
   20 CONTINUE
C
C  SCALE CC AND PUT INTO BLIN FOR FAST ADDRESSING
C
      LK = 0
      K2 = 0
      DO 50 K = 1,M
        K1 = K2 + 1
        K2 = KNZ(K)
        IF (K2.LT.K1) GOTO 40
        DO 30 L = K1,K2
          IJ = IJNZ(L)
          BLIN(L) = CC(IJ+LK)*Z2
   30   CONTINUE
   40   LK = LK + MCHF*MCHF
   50 CONTINUE
C
      CALL WOUTER(R)
C
C  START INWARD INTEGRATION
C
      DO 200 IJ = 1,MD
        DO 60 I = 1,N
          D1(I) = 0.0D0
          D2(I) = 0.0D0
          D3(I) = 0.0D0
          C2(I) = WF(I) + 0.5D0*WF1(I)
   60   CONTINUE
        DO 80 I = 1,N
          DO 70 J = 1,N
            D1(J) = D1(J) + W(J,I)*WF(I)
   70     CONTINUE
   80   CONTINUE
        R = R + HH
        CALL WOUTER(R)
        DO 90 I = 1,N
          C1(I) = C2(I) - 0.25D0*D1(I)
   90   CONTINUE
        DO 110 I = 1,N
          DO 100 J = 1,N
            D2(J) = D2(J) + W(J,I)*C2(I)
  100     CONTINUE
  110   CONTINUE
        DO 120 I = 1,N
          D1(I) = D1(I) + D2(I)
          C2(I) = WF(I) + WF1(I) - 0.5D0*D2(I)
  120   CONTINUE
        DO 140 I = 1,N
          DO 130 J = 1,N
            D3(J) = D3(J) + W(J,I)*C1(I)
  130     CONTINUE
  140   CONTINUE
        DO 150 I = 1,N
          D2(I) = D2(I) + 2.0D0*D3(I)
  150   CONTINUE
        R = R + HH
        CALL WOUTER(R)
        A3 = 1.0D0/6.0D0
        DO 160 I = 1,N
          WF(I) = WF(I) + WF1(I) - (D1(I)+D3(I))*A3
  160   CONTINUE
        DO 180 I = 1,N
          DO 170 J = 1,N
            D2(J) = D2(J) + W(J,I)*C2(I)
  170     CONTINUE
  180   CONTINUE
        DO 190 I = 1,N
          WF1(I) = WF1(I) - A3* (D1(I)+D2(I))
  190   CONTINUE
  200 CONTINUE
C
C  END INWARD INTEGRATION
C
C  UNSCALE E2,WF1
C
      A1 = 1.0D0/H
      Z2 = 1.0D0/Z2
      DO 210 I = 1,N
        WF1(I) = WF1(I)*A1
        E2(I) = E2(I)*Z2
  210 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE WOUTER(R)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C   WOUTER CALCULATES THE MATRIX W(R) DEFINED BY CPC EQUATION 4.1
C   IN THE FORM REQUIRED BY SUBROUTINE SOLV
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX,MXCSQ=MCHF*MCHF)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM2=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-MXCSQ-5*MCHF-1)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /MATRIX/FX(2,MCHF,MCHF),FX1(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),W(MXCSQ),
     C       C1(MCHF),C2(MCHF),D1(MCHF),D2(MCHF),DUM(MCHF),DUM1(1,1,1),
     D       DUM2(MXDUM2)
      COMMON /CMN02/N,NOP,M
      COMMON /WTR/B1,B2
C
      X = 1.0D0/R
      IF (NZD.EQ.0) GOTO 10
      X = X/DBLE(NZD)
      B1 = B2*X
C
C  INITIALISE W ON AND BELOW DIAGONAL
C
   10 CONTINUE
      L = 1
      IF (N.EQ.1) GOTO 40
      DO 30 J = 2,N
        W(L) = E2(J-1) + B1
        DO 20 I = J,N
          L = L + 1
          W(L) = 0.0D0
   20   CONTINUE
        L = L + NCHD1 + J
   30 CONTINUE
   40 CONTINUE
      W(L) = E2(N) + B1
C
C  CONTINUE CALCULATION OF W ON AND BELOW DIAGONAL
C
      A2 = X
      K2 = 0
      DO 60 K = 1,M
        A2 = A2*X
        K1 = K2 + 1
        K2 = KNZ(K)
        IF (K2.LT.K1) GOTO 60
        DO 50 L = K1,K2
          IJ = IJNZ(L)
          W(IJ) = W(IJ) + A2*BLIN(L)
   50   CONTINUE
   60 CONTINUE
C
C   W ABOVE DIAGONAL
C
      IF (N.EQ.1) RETURN
      L = 1
      DO 80 I = 2,N
        IJ = L
        DO 70 J = I,N
          L = L + 1
          IJ = IJ + MCHF
          W(IJ) = W(L)
   70   CONTINUE
        L = L + NCHD1 + I
   80 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE WW(W,X)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C   WW CALCULATES THE MATRIX W(R) DEFINED BY CPC EQUATION 4.1 AT R = X,
C   IN THE FORM REQUIRED BY SUBROUTINES SECDRV AND FG
C
      PARAMETER (MXMAT1= (MLMX/2)* (MCHF* (MCHF+1))/2)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXW=MCHF*MCHF)
C
      COMMON /MAT1/BLIN(MXMAT1),R3,IJNZ(MXMAT1),KNZ(MLMX),NCHD1,NZD
      COMMON /SAVE/EL(MCHF),ET(MCHF),BLAM(MXBLAM),F1(2,MCHF,MCHF),
     A       F2(2,MCHF,MCHF),B1,B2,ECON,EROR,SQK,DELNU,DEL1,SZ,R1,R2,R0,
     B       RA,RB,DR,KJ(MCHF),METHOD,MFG,INTER,METH,ISOLN,KMETH,IPUNCH,
     C       NCHF,NCHOP,NCHCL,LAMMX,MT6,IBUG,IFILE,JFILE,KFILE,MFGP1,
     D       IALT,JALT,KALT
C
      DIMENSION W(MXW)
C
C   INITIALISE W ON AND BELOW DIAGONAL
C   ==================================
C
      A1 = 1.0D0/X
      A2 = 2.0D0*SZ*A1
      L = 1
      IF (NCHF.EQ.1) GOTO 30
      DO 20 J = 2,NCHF
        W(L) = ET(J-1) + A2
        DO 10 I = J,NCHF
          L = L + 1
          W(L) = 0.0D0
   10   CONTINUE
        L = L + NCHD1 + J
   20 CONTINUE
   30 CONTINUE
      W(L) = ET(NCHF) + A2
C
C   COMPLETE CALCULATION OF W ON AND BELOW DIAGONAL
C   ===============================================
C
      A2 = A1
      K2 = 0
      DO 50 K = 1,LAMMX
        A2 = A2*A1
        K1 = K2 + 1
        K2 = KNZ(K)
        IF (K2.LT.K1) GOTO 50
        DO 40 L = K1,K2
          IJ = IJNZ(L)
          W(IJ) = W(IJ) + A2*BLIN(L)
   40   CONTINUE
   50 CONTINUE
C
C   W ABOVE DIAGONAL
C   ================
C
      IF (NCHF.EQ.1) RETURN
      L = 1
      DO 70 I = 2,NCHF
        IJ = L
        DO 60 J = I,NCHF
          L = L + 1
          IJ = IJ + MCHF
          W(IJ) = W(L)
   60   CONTINUE
        L = L + NCHD1 + I
   70 CONTINUE
C
      END
CEND********************************************************************
      SUBROUTINE ZETA(N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (mchf=200,MLMX=5)
C
C     WBK AMPLITUDE ZET AND ITS INVERSE FOR ALL MESH POINTS FOR ITERA
C     COMPUTES AND STORES ZET(J) AND 1.0/ZET(J) AND DERIVS. UP TO N-1
C
      PARAMETER (MXMFG=540)
      PARAMETER (MXMATX= (MXMFG+6+MLMX)*MCHF*MCHF+351*MCHF+531)
      PARAMETER (MXBLAM=MCHF*MCHF*MLMX)
      PARAMETER (MXV= (MCHF* (MCHF+1))/2)
      PARAMETER (MXDUM=MXMATX-4*MCHF*MCHF-2*MCHF*13*10-13*13-MXBLAM-
     A          MCHF-12*10-MCHF-MXV*11*10-2*12*10-12*11-1)
C
      COMMON /MATRIX/F(2,MCHF,MCHF),FDR(2,MCHF,MCHF),AB1(MCHF,13,10),
     A       AB2(MCHF,13,10),ALP(13,13),CC(MXBLAM),E2(MCHF),PP(12,10),
     B       T1(MCHF),V(MXV,11,10),ZET(12,10),ZTIN(12,10),CLP(12,11),
     C       DUM1(1,1,1),DUM(MXDUM)
C
      DIMENSION BLP(12,11)
C
      COMMON /CMN04/HY,NHY,J
C
      SGN = 1.0D0
      E2J = E2(J)
      AE2J = ABS(E2J)
      IF (E2J.LT.0.0D0) SGN = -1.0D0
      S = SGN + SGN
C
      Y1 = 0.0D0
      DO 10 IPT = 1,NHY
        Y1 = Y1 + HY
        Y2 = SQRT(AE2J+S*Y1*Y1)
        ZET(1,IPT) = Y2
        ZTIN(1,IPT) = 1.0D0/Y2
   10 CONTINUE
C
      IF (N.EQ.1) RETURN
C
      S = SGN
      DO 70 NZ = 1,2
        S = -S
        ALP(1,1) = -S
        IF (N.EQ.2) GOTO 40
        ALP(1,2) = S + S
        ST = SGN* (1.0D0-NZ-NZ)
        ALP(2,2) = - (ST+4.0D0*SGN)*S
        IF (N.EQ.3) GOTO 40
        DO 30 KK = 4,N
          K = KK - 1
          KM1 = K - 1
          ALP(1,K) = - (1+KM1)*ALP(1,KM1)
          ALP(K,K) = (ST+SGN* (K+K))*ALP(KM1,KM1)
          DO 20 KP = 2,KM1
            ALP(KP,K) = - (KP+KM1)*ALP(KP,KM1) +
     A                  (ST+SGN* (KP+KP))*ALP(KP-1,KM1)
   20     CONTINUE
   30   CONTINUE
C
   40   CONTINUE
        IF (NZ.EQ.2) GOTO 80
        N1 = N - 1
        DO 60 KK = 1,N1
          DO 50 KP = 1,KK
            BLP(KP,KK) = ALP(KP,KK)
   50     CONTINUE
   60   CONTINUE
   70 CONTINUE
C
   80 CONTINUE
      Y2 = 0.0D0
      DO 120 IPT = 1,NHY
        Z1 = ZET(1,IPT)
        Y2 = Y2 + HY
        Y1 = Y2*Y2
        YX = 1.0D0
        TEMP = Y1/ (Z1*Z1)
        YMIN = 1.0D-36/TEMP
        K = 0
        DO 110 KK = 2,N
          K = K + 1
          YX = Y1*YX
          YZ = YX
          Y3 = 0.0D0
          Y4 = 0.0D0
          DO 90 KP = 1,K
            IF (YZ.LT.YMIN) GOTO 100
            YZ = YZ*TEMP
            Y3 = Y3 + BLP(KP,K)*YZ
            Y4 = Y4 + ALP(KP,K)*YZ
   90     CONTINUE
  100     CONTINUE
          ZTIN(KK,IPT) = Y3/Z1
          ZET(KK,IPT) = Y4*Z1
  110   CONTINUE
  120 CONTINUE
C
      END
